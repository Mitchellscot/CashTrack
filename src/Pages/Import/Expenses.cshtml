@page
@using CashTrack.Models.ImportCsvModels
@using CashTrack.Models.MerchantModels
@using CashTrack.Pages.Shared
@model CashTrack.Pages.Import.ExpensesModel
@{
    Layout = "_Layout";
}
<div class="container-fluid mb-0">
    @await Html.PartialAsync("_MessagePartial",
    new _MessagePartial() { Message = Model.InfoMessage, MessageType = MessageType.Info, Show = Model.InfoMessage != null })
    @await Html.PartialAsync("_MessagePartial",
    new _MessagePartial() { Message = Model.SuccessMessage, MessageType = MessageType.Success, Show = Model.SuccessMessage != null })
    @await Html.PartialAsync("_MessagePartial",
    new _MessagePartial() {MessageType = MessageType.Danger, Show = !ViewData.ModelState.IsValid })

        <div style="position: absolute; right: 4%; top: 8%; z-index:1;"><button class="btn btn-primary" type="submit" id="importButton" data-bs-toggle="modal" data-bs-target="#importCsvModal">Import</button>
            </div>
    <ul class="nav nav-tabs">
        <li class="nav-item">
            <a asp-page="./Expenses" class="nav-link active">Expenses</a>
        </li>
        <li class="nav-item">
            <a asp-page="./Income" class="nav-link">Income</a>
        </li>
          <li class="nav-item dropdown">
              <a class="nav-link dropdown-toggle" data-bs-toggle="dropdown" role="button">Add</a>
              <ul class="dropdown-menu">
                  <li class="text-center">
                      <button class="dropdown-item fakelink text-center" id="addMerchant" data-bs-toggle="modal" data-bs-target="#addMerchantModal">Add Merchant</button>
                      </li>
                  <li class="text-center">
                      <button class="dropdown-item fakelink text-center" id="addSubCategory">Add Category</button>
                      </li>
              </ul>
              </li>
              </ul>

              <div class="modal fade" id="addMerchantModal">
        @await Html.PartialAsync("_AddMerchantPartial", new AddEditMerchantModal() { Returnurl = "~/Import/Expenses", SuggestOnLookup = true, IsEdit = false })
                  </div>
                  <div class="modal fade" id="importCsvModal">
        @await Html.PartialAsync("_ImportTransactionsModal", new ImportModel() { ReturnUrl = "~/Import/Expenses" })
                  </div>

    @if (Model.ExpenseReviewResponse != null && Model.ExpenseReviewResponse.ListItems.Count() > 0)
    {
        <div class="row">
            <div class="table-responsive table-sm">
                <table class="table table-bordered table-hover table-sm mb-0 mt-2">
                    <thead>
                        <tr class="text-center table-primary">
                            <th width="10%">
                                Date
                            </th>
                            <th width="10%">
                                Amount
                            </th>
                            <th width="15%">
                                Merchant
                            </th>
                            <th width="15%">
                                Category
                            </th>
                            <th width="40%">
                                Notes
                            </th>
                            <th width="10%">
                                Actions
                            </th>
                        </tr>
                    </thead>

                    <tbody>
                        @foreach (var expense in Model.ExpenseReviewResponse.ListItems)
                        {
                                    <tr class="text-center">
                                        <form method="post" id="editExpenseReviewForm-@expense.Id" asp-page-handler="ExpenseAdd">
                                            <input type="hidden" asp-for="@Model.SelectedExpenseId" value="@expense.Id" />
                                        <td>
                                            <input type="hidden" asp-for="@Model.SelectedExpense.Date" value="@expense.Date" />
                                        @expense.Date.Date.ToShortDateString()
                                        </td>
                                        <td>
                                            <input type="hidden" asp-for="@Model.SelectedExpense.Amount" value="@expense.Amount" />
                                        @expense.Amount
                                        </td>
                                        <td>
                                            <input class="form-control text-center form-control-sm" asp-for="@Model.SelectedExpense.Merchant" id="merchantName-@expense.Id" value="@expense.SuggestedMerchant" />
                                        </td>
                                        <td>
                                        @{
                                            var dropdownList = new SelectList(Model.CategoryList, "Category", "Category", expense.SuggestedCategory);
                                        }
                                            <select class="form-select text-center form-select-sm" 
                                id="category-@expense.Id" asp-for="SelectedExpense.SubCategory" 
                                asp-items="@dropdownList" value="@expense.SuggestedCategory">
                                            @{
                                                if (expense.SuggestedCategory == null)
                                                {
                                                            <option value="" selected disabled hidden></option>
                                                }
                                            }
                                            </select>
                                        </td>
                                        <td>
                                            <input class="form-control mx-auto form-control-sm" asp-for="@Model.SelectedExpense.Notes" value="@expense.Notes" />
                                        </td>
                                        <td class="mx-0 px-0 py-0 my-0">

                                            <button style="background: none; padding: 0px; border: none;"
                                    type="submit" class="me-2 ms-1 py-0 my-0">
                                            <i class="bi bi-check2-circle text-primary" role="img" style="font-size: 1.4rem;"></i>
                           </button>

                           <button style="background: none; padding: 0px; border: none;"
                   data-bs-toggle="modal"
                   data-bs-target="#deleteModal-@expense.Id"
                   type="button" class="mx-0 px-0 py-0 my-0">
                               <i class="bi bi-x-circle text-primary" role="img"
                   style="font-size: 1.4rem;"></i>
                           </button>
                                        @*Delete Modal*@
                           <div class="modal fade" id="deleteModal-@expense.Id">
                               <div class="modal-dialog" role="document">
                                   <div class="modal-content">
                                       <div class="modal-header text-center">
                                           <h5 class="modal-title text-center">
                                               <strong>Are you sure you want to Remove this Expense?</strong>
                                               </h5>
                                                   </div>
                                                   <div class="modal-body text-wrap text-center">
                                                       Once this is done, you will have to manually add it on the expense page. It will no longer show up in future imports.
                                                   </div>
                                                   <div class="modal-footer d-flex justify-content-evenly">
                                                       <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">
                                                           Cancel
                                                           </button>
                                                           <button 
                                                   asp-page-handler="RemoveExpense" 
                                                   name="SelectedId" value="@expense.Id" 
                                                   type="submit" class="btn btn-danger">DELETE</button>
                                                        </div>
                                                    </div>
                                                </div>
                                            </div>
                                        @*End Delete Modal*@
                           <button style="background: none; padding: 0px; border: none;"
                                    type="button" class="ms-2 me-1 py-0 my-0" data-bs-toggle="modal" 
                                    data-bs-target="#splitExpenseModal-@expense.Id">
                                              <i class="bi bi-arrow-left-right text-primary" role="img"
                   style="font-size: 1.4rem;"></i>
                           </button>
                                        @*Split Expense Modal*@
                           <div class="modal fade" id="splitExpenseModal-@expense.Id">
                               <div class="modal-dialog" role="document">
                                   <div class="modal-content">
                                       <div class="modal-header">
                                           <h5 class="modal-title w-100">
                                               <strong>Split An Expense</strong>
                                               </h5>
                                                   </div>
                                                   <div class="modal-body text-wrap text-center">
                                                       This will take you to a page where you can split this expense into seperate expenses.
                                                   </div>
                                                   <div class="modal-footer d-flex justify-content-evenly">
                                                       <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">
                                                           Cancel
                                                           </button>
                                                           <button 
                                                   form="editExpenseReviewForm-@expense.Id"
                                                   asp-page-handler="SplitExpense"
                                                   type="submit" class="btn btn-primary">Ok</button>
                                                        </div>
                                                    </div>
                                                </div>
                                            </div>
                                        @*End Split Expense Modal*@

                           </td>
                           </form>
                           </tr>
                        }
                    </tbody>
                </table>
                <div class="row my-1">
                    <div class="col-sm-6 col-lg-2 col-xl-2 mx-auto">
                        @if (@Model.ExpenseReviewResponse.TotalCount > 0)
                        {
                            var currentCount = Model.ExpenseReviewResponse.PageNumber * @Model.ExpenseReviewResponse.PageSize;
                                    <span class="text-muted">@(Math.Min(currentCount, Model.ExpenseReviewResponse.TotalCount)) of @Model.ExpenseReviewResponse.TotalCount</span>
                        }
                    </div>
                    <div class="col-sm-6 col-lg-4 col-xl-6 m-auto">
                        @*Total amount went here. Something else can go here maybe?*@
                    </div>
                    <div class="col-sm-12 col-lg-6 col-xl-4 my-0 py-0 gy-0">
                        @await Html.PartialAsync("_PaginationPartial",
                    new _PaginationPartialModel {
                    PathLink = "../Import/Expenses",
                    IsExpensePage = false,
                    PageNumber = Model.ExpenseReviewResponse.PageNumber,
                    TotalPages = Model.ExpenseReviewResponse.TotalPages,
                    })
                    </div>
                </div>
            </div>
        </div>

    }
</div>
@section Scripts {
<script src="https://code.jquery.com/jquery-3.6.0.js" asp-append-version="true">
</script>
<script src="https://code.jquery.com/ui/1.13.1/jquery-ui.js" asp-append-version="true"></script>
<partial name="_ValidationScriptsPartial" />
<script src="~/js/importExpenses.js" asp-append-version="true"></script>
<script type="text/javascript">

    $(document).ready(() => {

        //disables city and state inputs if merchant is online - for add merchant modal
        $("#addEditMerchantIsOnline").click(() => {
            console.log('hi');
            if($("#addEditMerchantIsOnline").is(":checked")){
                $("#addEditMerchantCity").prop("disabled", true);
                $("#addEditMerchantState").prop("disabled", true);
            }
            else{
                $("#addEditMerchantCity").prop("disabled", false);
                $("#addEditMerchantState").prop("disabled", false);
            }});

        //creates a waiting effect while import script runs
        $('#importButton').click(()=>{
            $("#importButton").prepend("<span class='spinner-border spinner-border-sm'></span> ");
            $("#importButton").append("ing...");
            $("#importButton").css('pointer-events', 'none');
            $("#importButton").removeClass('btn-primary');
            $("#importButton").addClass('btn-secondary');
        });

        @if(@Model.ExpenseReviewResponse != null && Model.ExpenseReviewResponse.ListItems.Any())
        {
            var ids = Model.ExpenseReviewResponse.ListItems.Select(x => x.Id).ToList();
            foreach(var id in ids)
            {
                //Autocomplete for merchant names
                <text>$("#merchantName-@id").on("input", () => {
                    let editSearchTerm = $("#merchantName-@id").val();
                    $.ajax({
                        url: `/api/merchants?merchantName=${editSearchTerm}`,
                        method: 'GET'
                    }).then((response) => {
                        $("#merchantName-@id").empty();
                        $("#merchantName-@id").autocomplete({ source: response });
                    });
                })
                </text>
            }
        }
    });
</Script>
}