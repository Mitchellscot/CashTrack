@page
@using CashTrack.Common;
@using CashTrack.Models.Common
@using CashTrack.Models.ImportRuleModels
@using CashTrack.Pages.Shared
@model CashTrack.Pages.Import.RulesModel
@{
    ViewData["Title"] = "- Import";
    Layout = "_Layout";
}
<div class="container-fluid">

    @await Html.PartialAsync("_MessagePartial",
    new _MessagePartial() { Message = Model.InfoMessage, MessageType = MessageType.Info, Show = Model.InfoMessage != null })
    @await Html.PartialAsync("_MessagePartial",
    new _MessagePartial() { Message = Model.SuccessMessage, MessageType = MessageType.Success, Show = Model.SuccessMessage != null })
    @await Html.PartialAsync("_MessagePartial",
    new _MessagePartial() {MessageType = MessageType.Danger, Show = !ViewData.ModelState.IsValid })

    <div class="row mb-1d-flex justify-content-evenly">
        <div class="col-6">
            <button type="button" id="backButton" class="btn btn-secondary text-center">Back</button>
        </div>
        <div class="col-6">
            <button class="btn btn-primary float-end" id="addImportRuleButton" data-bs-toggle="modal" data-bs-target="#addImportRuleModal">Add Import Rule</button>
        </div>
        <div class="modal fade" id="addImportRuleModal">
        @await Html.PartialAsync("AddEditImportRuleModal", new AddEditImportRuleModal() { Returnurl = "~/Import/Rules", IsEdit = false })
        </div>
        </div>
        @if (Model.RuleRespose != null && Model.RuleRespose.ListItems.Count() > 0)
        {
            <div class="row mt-2">
                <div class="table-responsive table-sm">
                    <table class="table table-bordered table-sm table-hover mb-0">
                        <thead>
                            <tr class="text-center table-primary">
                                <th>
                                    Rule
                                <a asp-page="./Rules" asp-route-Query="0" asp-route-Q2="true" class="icon-button float-end color-on-hover">
                                    @await Html.PartialAsync("Icons", new Icons()
                                    {
                                        Icon = Icon.ArrowUp,
                                        Color = Model.Query == 0 && Model.Q2 == true ? IconColors.Success : IconColors.White,
                                        Height=19,
                                        Width=16,
                                        Classes="color-svg-on-hover"
                                    })
                                </a>
                                <a asp-page="./Rules" asp-route-Query="0" asp-route-Q2="false" class="icon-button float-end color-on-hover">
                                    @await Html.PartialAsync("Icons", new Icons()
                                    {
                                        Icon = Icon.ArrowDown,
                                        Color = Model.Query == 0 && Model.Q2 == false ? IconColors.Success : IconColors.White,
                                        Height=19,
                                        Width=16,
                                        Classes=$"color-svg-on-hover"
                                    })
                                </a>
                                </th>
                                <th class="file-column">
                                    File
                                <a asp-page="./Rules" asp-route-Query="1" asp-route-Q2="true" class="icon-button float-end color-on-hover">
                                    @await Html.PartialAsync("Icons", new Icons()
                                    {
                                        Icon = Icon.ArrowUp,
                                        Color = Model.Query == ImportRuleOrderBy.FileType && Model.Q2 == true ? IconColors.Success : IconColors.White,
                                        Height=19,
                                        Width=16,
                                        Classes="color-svg-on-hover"
                                    })
                                </a>
                                <a asp-page="./Rules" asp-route-Query="1" asp-route-Q2="false" class="icon-button float-end color-on-hover">
                                    @await Html.PartialAsync("Icons", new Icons()
                                    {
                                        Icon = Icon.ArrowDown,
                                        Color = Model.Query == ImportRuleOrderBy.FileType && Model.Q2 == false ? IconColors.Success : IconColors.White,
                                        Height=19,
                                        Width=16,
                                        Classes=$"color-svg-on-hover"
                                    })
                                </a>
                                </th>
                                <th class="transaction-column">
                                    Transaction
                                <a asp-page="./Rules" asp-route-Query="2" asp-route-Q2="true" class="icon-button float-end color-on-hover">
                                    @await Html.PartialAsync("Icons", new Icons()
                                    {
                                        Icon = Icon.ArrowUp,
                                        Color = Model.Query == ImportRuleOrderBy.TransactionType && Model.Q2 == true ? IconColors.Success : IconColors.White,
                                        Height=19,
                                        Width=16,
                                        Classes="color-svg-on-hover"
                                    })
                                </a>
                                <a asp-page="./Rules" asp-route-Query="2" asp-route-Q2="false" class="icon-button float-end color-on-hover">
                                    @await Html.PartialAsync("Icons", new Icons()
                                    {
                                        Icon = Icon.ArrowDown,
                                        Color = Model.Query == ImportRuleOrderBy.TransactionType && Model.Q2 == false ? IconColors.Success : IconColors.White,
                                        Height=19,
                                        Width=16,
                                        Classes=$"color-svg-on-hover"
                                    })
                                </a>
                                </th>
                                <th>
                                    Rule
                                <a asp-page="./Rules" asp-route-Query="3" asp-route-Q2="true" class="icon-button float-end color-on-hover">
                                    @await Html.PartialAsync("Icons", new Icons()
                                    {
                                        Icon = Icon.ArrowUp,
                                        Color = Model.Query == ImportRuleOrderBy.Rule && Model.Q2 == true ? IconColors.Success : IconColors.White,
                                        Height=19,
                                        Width=16,
                                        Classes="color-svg-on-hover"
                                    })
                                </a>
                                <a asp-page="./Rules" asp-route-Query="3" asp-route-Q2="false" class="icon-button float-end color-on-hover">
                                    @await Html.PartialAsync("Icons", new Icons()
                                    {
                                        Icon = Icon.ArrowDown,
                                        Color = Model.Query == ImportRuleOrderBy.Rule && Model.Q2 == false ? IconColors.Success : IconColors.White,
                                        Height=19,
                                        Width=16,
                                        Classes=$"color-svg-on-hover"
                                    })
                                </a>
                                </th>
                                <th class="merchant-source-column">
                                    Merchant / Source
                                <a asp-page="./Rules" asp-route-Query="4" asp-route-Q2="true" class="icon-button float-end color-on-hover">
                                    @await Html.PartialAsync("Icons", new Icons()
                                    {
                                        Icon = Icon.ArrowUp,
                                        Color = Model.Query == ImportRuleOrderBy.MerchantSource && Model.Q2 == true ? IconColors.Success : IconColors.White,
                                        Height=19,
                                        Width=16,
                                        Classes="color-svg-on-hover"
                                    })
                                </a>
                                <a asp-page="./Rules" asp-route-Query="4" asp-route-Q2="false" class="icon-button float-end color-on-hover">
                                    @await Html.PartialAsync("Icons", new Icons()
                                    {
                                        Icon = Icon.ArrowDown,
                                        Color = Model.Query == ImportRuleOrderBy.MerchantSource && Model.Q2 == false ? IconColors.Success : IconColors.White,
                                        Height=19,
                                        Width=16,
                                        Classes=$"color-svg-on-hover"
                                    })
                                </a>
                                </th>
                                <th class="category-column">
                                    Category
                                <a asp-page="./Rules" asp-route-Query="5" asp-route-Q2="true" class="icon-button float-end color-on-hover">
                                    @await Html.PartialAsync("Icons", new Icons()
                                    {
                                        Icon = Icon.ArrowUp,
                                        Color = Model.Query == ImportRuleOrderBy.Category && Model.Q2 == true ? IconColors.Success : IconColors.White,
                                        Height=19,
                                        Width=16,
                                        Classes="color-svg-on-hover"
                                    })
                                </a>
                                <a asp-page="./Rules" asp-route-Query="5" asp-route-Q2="false" class="icon-button float-end color-on-hover">
                                    @await Html.PartialAsync("Icons", new Icons()
                                    {
                                        Icon = Icon.ArrowDown,
                                        Color = Model.Query == ImportRuleOrderBy.Category && Model.Q2 == false ? IconColors.Success : IconColors.White,
                                        Height=19,
                                        Width=16,
                                        Classes=$"color-svg-on-hover"
                                    })
                                </a>
                                </th>
                                <th>
                                    Actions
                                </th>
                            </tr>
                        </thead>
                        <tbody>
                            @foreach (var rule in Model.RuleRespose.ListItems)
                            {
                                <tr>
                                    <td width="10%" class="text-center">
                                        @rule.RuleType
                                    </td>
                                    <td width="10%" class="text-center">
                                        @rule.FileType
                                    </td>
                                    <td width="15%" class="text-center">
                                        @rule.TransactionType
                                    </td>
                                    <td width="20%" class="text-center">
                                        @rule.Rule
                                    </td>
                                    <td width="20%" class="text-center">
                                        @{var merchantSource = rule.MerchantSourceId.HasValue ? rule.MerchantSource : null;}
                                        @merchantSource
                                    </td>
                                    <td width="15%" class="text-center">
                                        @{
                                            var category = rule.CategoryId.HasValue ? rule.Category : null;
                                        }
                                        
                                        @category
                                    </td>
                                    <td width="10%" class="text-center">
                                        <button 
                                            type="button"
                                            data-bs-toggle="modal"
                                            data-bs-target="#addEditImportRuleModal-@rule.Id"
                                            class="icon-button px-2 edit-rule-button-js">
@*when the icon is clicked, even though the javascript is on the button itself, the data is pulled from the icon...*@
                                        <svg xmlns="http://www.w3.org/2000/svg" width="20" height="20" fill=IconColors.Primary viewBox="0 0 16 16" class="action-icon" data-transaction-type=@rule.TransactionType data-rule-type=@rule.RuleType>
                                        <path d="M12.146.146a.5.5 0 0 1 .708 0l3 3a.5.5 0 0 1 0 .708l-10 10a.5.5 0 0 1-.168.11l-5 2a.5.5 0 0 1-.65-.65l2-5a.5.5 0 0 1 .11-.168l10-10zM11.207 2.5 13.5 4.793 14.793 3.5 12.5 1.207 11.207 2.5zm1.586 3L10.5 3.207 4 9.707V10h.5a.5.5 0 0 1 .5.5v.5h.5a.5.5 0 0 1 .5.5v.5h.293l6.5-6.5zm-9.761 5.175-.106.106-1.528 3.821 3.821-1.528.106-.106A.5.5 0 0 1 5 12.5V12h-.5a.5.5 0 0 1-.5-.5V11h-.5a.5.5 0 0 1-.468-.325z" />
                                    </svg>
                                    </button>
                                        <button type="button" data-bs-toggle="modal"
                                    data-bs-target="#deleteModal-@rule.Id" class="icon-button ps-2 ps-0 me-0">
                                            @await Html.PartialAsync("Icons", new Icons()
                                            {
                                                Icon = Icon.Trash,
                                                Color = IconColors.Primary,
                                                Height=20,
                                                Width=20,
                                                Classes="action-icon"
                                            })
                                    </button>
                                    @*Delete Model*@
                                    <div class="modal fade" id="deleteModal-@rule.Id">
                                        <div class="modal-dialog" role="document">
                                            <div class="modal-content">
                                                <div class="modal-header text-center">
                                                    <h5 class="modal-title text-center">
                                                        <strong class="text-center">Are you sure you want to delete this rule?</strong>
                                                    </h5>
                                                    <button 
                                                        type="button" 
                                                        class="btn-close" 
                                                        data-bs-dismiss="modal">
                                                    </button>
                                                </div>

                                                <div class="modal-footer d-flex justify-content-evenly">
                                                    <button type="button" 
                                                        class="btn btn-secondary" 
                                                        data-bs-dismiss="modal">Cancel</button>
                                                    <form method="post"
                                                  asp-page="./Rules"
                                                  asp-page-handler="Delete"
                                                  asp-route-query="@Model.Query"
                                                  asp-route-q2="@Model.Q2"
                                                  asp-route-ruleId="@rule.Id"
                                                  asp-route-pageNumber="@Model.PageNumber">
                                                        <button type="submit" class="btn btn-danger">DELETE</button>
                                                    </form>
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                    @*End Delete Modal*@
                                    </td>
                                </tr>
                                <div class="modal fade" id="addEditImportRuleModal-@rule.Id">
                                    @await Html.PartialAsync("AddEditImportRuleModal", 
                                    new AddEditImportRuleModal() {
                                        Id = rule.Id,
                                        RuleType = Enum.Parse<RuleType>(rule.RuleType, true),
                                        TransactionType = Enum.Parse<TransactionType>(rule.TransactionType, true),
                                        FileType = rule.FileType,
                                        Rule = rule.Rule,
                                        CategoryId = rule.CategoryId?? null,
                                        MerchantSourceId = rule.MerchantSourceId?? null,
                                        IncomeCategoryList = new SelectList(Model.IncomeCategoryList, "Id", "Category", rule.CategoryId?? null),
                                        SubCategoryList = new SelectList(Model.SubCategoryList, "Id", "Category", rule.CategoryId?? null),
                                        MerchantList = new SelectList(Model.MerchantList, "Id", "Name", rule.MerchantSourceId?? null),
                        SourceList = new SelectList(Model.SourceList, "Id", "Name", rule.MerchantSourceId?? null),
                                        Returnurl = "~/Import/Rules", 
                                        IsEdit = true })
                                </div>
                            }
                        </tbody>
                    </table>
                    <div class="row my-1">
                        <div class="col-sm-6 col-lg-2 col-xl-2 m-auto">
                            @if (@Model.RuleRespose.TotalCount > 0)
                            {
                                var currentCount = Model.RuleRespose.PageNumber * @Model.RuleRespose.PageSize;
                                <span class="text-muted" id="totalCount">@(Math.Min(currentCount, Model.RuleRespose.TotalCount)) of @Model.RuleRespose.TotalCount</span>
                            }
                        </div>
                        <div class="col-sm-6 col-lg-4 col-xl-6 m-auto">
                        </div>
                        <div class="col-sm-12 col-lg-6 col-xl-4 my-0 py-0 gy-0">
                            @await Html.PartialAsync("_PaginationPartial",
                        new _PaginationPartialModel {
                        PathLink = "../Import/Rules",
                        IsExpensePage = false,
                        PageNumber = Model.RuleRespose.PageNumber,
                        TotalPages = Model.RuleRespose.TotalPages,
                        Query = (int)Model.Query,
                        q2 = Model.Q2.ToString()
                        })
                        </div>
                    </div>
                </div>
            </div>
        }

    </div>
    @section Scripts {
<script src="~/js/rules.js" asp-append-version="true"></script>
}