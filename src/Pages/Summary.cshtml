@page
@using CashTrack.Models.ExpenseModels;
@using CashTrack.Models.ImportCsvModels;
@using CashTrack.Models.IncomeCategoryModels;
@using CashTrack.Models.IncomeModels;
@using CashTrack.Models.IncomeSourceModels;
@using CashTrack.Models.MainCategoryModels;
@using CashTrack.Models.MerchantModels;
@using CashTrack.Models.SubCategoryModels;
@using CashTrack.Pages.Budget;
@using CashTrack.Pages.Shared;
@using System.Globalization;
@using System.Text.Json;
@model CashTrack.Pages.SummaryModel
@{
}

<div class="container-fluid">
    @await Html.PartialAsync("_MessagePartial",
    new _MessagePartial() { Message = Model.InfoMessage, MessageType = MessageType.Info, Show = Model.InfoMessage != null })
    @await Html.PartialAsync("_MessagePartial",
    new _MessagePartial() { Message = Model.SuccessMessage, MessageType = MessageType.Success, Show = Model.SuccessMessage != null })
    @await Html.PartialAsync("_MessagePartial",
    new _MessagePartial() {MessageType = MessageType.Danger, Show = !ViewData.ModelState.IsValid })
    <div class="row mt-2 border-bottom d-flex justify-content-between">
        <div class="d-flex col-auto align-self-center">
        <h3 class="me-2">
            All Time Summary
        </h3>
        </div>
        <div class="col-auto d-flex">
            <div class="d-flex justify-content-end">
                <button class="btn btn-secondary btn-height me-2 btn-text-overflow" type="button" data-bs-toggle="modal" data-bs-target="#expenseStats">View Details</button>
                <div class="dropdown-center">
                    <a class="btn btn-primary dropdown-toggle me-2 btn-text-overflow btn-height" href="#" role="button" data-bs-toggle="dropdown">Summary</a>
                    <ul class="dropdown-menu">
                        <li><a class="dropdown-item text-center" asp-page="./Index">Month</a></li>
                        <li><a class="dropdown-item text-center" asp-page="./Annual">Annual</a></li>
                        <li><a class="dropdown-item text-center" asp-page="./Summary">All Time</a></li>
                    </ul>
                </div>
                <button class="btn btn-primary dropdown-toggle btn-height" type="button" data-bs-toggle="dropdown">Add</button>
                <ul class="dropdown-menu">
                    <li>
                        <button class="dropdown-item fakelink text-center"
                                id="addExpenseButton"
                                data-bs-toggle="modal"
                                data-bs-target="#addExpenseModal">
                            Expense
                        </button>
                    </li>
                    <li>
                        <button class="dropdown-item fakelink text-center"
                                id="addIncomeButton"
                                data-bs-toggle="modal"
                                data-bs-target="#addIncomeModal">
                            Income
                        </button>
                    </li>
                    <li class="dropdown-divider"></li>
                    <li class="dropdown-item">
                        <button class="dropdown-item fakelink text-center"
                                id="addMerchantButton"
                                data-bs-toggle="modal"
                                data-bs-target="#addMerchantModal">
                            Merchant
                        </button>
                    </li>
                    <li class="dropdown-item">
                        <button class="dropdown-item fakelink text-center"
                                id="addMerchantButton"
                                data-bs-toggle="modal"
                                data-bs-target="#addSourceModal">
                            Income Source
                        </button>
                    </li>
                    <li class="dropdown-divider"></li>
                    <li class="dropdown-item">
                        <button class="dropdown-item fakelink text-center"
                                id="addIncomeCategoryButton"
                                data-bs-toggle="modal"
                                data-bs-target="#addIncomeCategoryModal">
                            Income Category
                        </button>
                    </li>
                    <li class="dropdown-item">
                        <button class="dropdown-item fakelink text-center"
                                id="addSubCategoryButton"
                                data-bs-toggle="modal"
                                data-bs-target="#addSubCategoryModal">
                            Expense Category
                        </button>
                    </li>
                    <li class="dropdown-item">
                        <button class="dropdown-item fakelink text-center"
                                id="addMainCategoryButton"
                                data-bs-toggle="modal"
                                data-bs-target="#addMainCategoryModal">
                            Main Category
                        </button>
                    </li>
                    <li class="dropdown-divider"></li>
                    <li>
                        <button class="dropdown-item fakelink text-center"
                                id="importCsvButton"
                                data-bs-toggle="modal"
                                data-bs-target="#importCsvModal">
                            Import Transactions
                        </button>
                    </li>
                </ul>
            </div>
        </div>
    </div>
    <div class="row mb-3">
        @if (Model.SummaryResponse.SummaryTotals != null)
            {
            <div class="col-6 col-lg-3 mt-1 d-flex flex-column align-content-center">
                <ul class="list-group text-center mt-2 shadow flex-fill d-flex justify-content-between">
                        <li class="flex-fill list-group-item d-flex justify-content-between p-2">
                            <span class="d-none d-md-block">
                                Earned: &nbsp;
                            </span>
                            <span class="fw-bold text-primary responsive-text">
                                @String.Format("{0:n}", Model.SummaryResponse.SummaryTotals.Earned)
                            </span>
                        </li>
                    <li class="flex-fill list-group-item d-flex justify-content-between p-2">
                            <span class="d-none d-md-block">
                                Spent:
                            </span>
                            <span class="fw-bold text-primary responsive-text">
                                @String.Format("{0:n}", Model.SummaryResponse.SummaryTotals.Spent)
                            </span>
                        </li>
                    <li class="flex-fill list-group-item d-flex justify-content-between p-2">
                            <span class="d-none d-md-block">
                                Saved:
                            </span>
                            <span class="fw-bold text-primary responsive-text">
                                @String.Format("{0:n}", Model.SummaryResponse.SummaryTotals.Saved)
                            </span>
                        </li>
                        <li class="flex-fill list-group-item d-flex justify-content-between p-2">
                            <span class="d-none d-md-block">
                                Averaged Monthly Savings:
                            </span>
                                <span class="fw-bold responsive-text">
                                     @Model.SummaryResponse.SummaryTotals.AveragedSavedPerMonth
                                </span>
                        </li>
                        <li class="flex-fill list-group-item d-flex justify-content-between p-2">
                            <span class="d-none d-md-block">
                                Average Yearly Savings:
                            </span>
                            <span class="fw-bold text-primary responsive-text">
                                @String.Format("{0:n}", Model.SummaryResponse.SummaryTotals.AveragedSavedPerYear)
                            </span>
                        </li>
                        <li class="flex-fill list-group-item d-flex justify-content-between p-2">
                            <span class="d-none d-md-block">
                                Expense Growth Per Year:
                            </span>
                            <span class="fw-bold text-primary responsive-text">
                                @Model.SummaryResponse.SummaryTotals.ExpenseGrowthPerYear &#37;
                            </span>
                        </li>
                        <li class="flex-fill list-group-item d-flex justify-content-between p-2">
                            <span class="d-none d-md-block">
                                Income Growth Per Year:
                            </span>
                            <span class="fw-bold text-primary responsive-text">
                                @Model.SummaryResponse.SummaryTotals.IncomeGrowthPerYear &#37;
                            </span>
                        </li>
                    </ul>
                </div>
            }
        @if (Model.SummaryResponse.OverallSummaryChart != null)
        {
            <div class="col-6 col-lg-3 d-flex">
                <canvas id="overallSummaryChart" class="shadow align-self-center chart-height pt-2"></canvas>
            </div>
        }
@*        @if(Model.SummaryResponse.MonthlyExpenseStatistics.Any())
        {
            <div class="col-12 col-lg-6 d-flex">
                <canvas id="monthlyStatisticsChart" class="chart-height shadow align-self-center"></canvas>
            </div>
        }*@
    </div>
        <div class="row mb-2">
        @if (Model.SummaryResponse.SavingsChart != null && Model.SummaryResponse.TopExpenses.Count > 1)
        {
            <div class="col-12 col-lg-6 d-flex">
                <canvas id="savingsChart" class="chart-height shadow align-self-center"></canvas>
            </div>
        }
@*        @if (Model.SummaryResponse.IncomeExpenseChart != null && Model.SummaryResponse.TopExpenses.Count > 1)
        {
            <div class="col-12 col-lg-6 d-flex">
                <canvas id="incomeExpenseChart" class="chart-height shadow align-self-center"></canvas>
            </div>
        }*@
    </div>
    <div class="row mb-2">
        @if (Model.SummaryResponse.IncomeStatistics != null && Model.SummaryResponse.TopExpenses.Count > 1)
        {
            <div class="col-12 col-lg-6 d-flex">
                <canvas id="incomeStatisticsChart" class="chart-height shadow align-self-center"></canvas>
            </div>
        }
        @if (Model.SummaryResponse.ExpenseStatistics != null && Model.SummaryResponse.TopExpenses.Count > 1)
        {
            <div class="col-12 col-lg-6 d-flex">
                <canvas id="expenseStatisticsChart" class="chart-height shadow align-self-center"></canvas>
            </div>
        }
    </div>
    <div class="row gx-5">
        @if (Model.SummaryResponse.TopExpenses.Count > 1)
        {
            <div class="col-12 col-lg-6 my-3">
                <div class="row shadow">
                    <div class="col-6 pie-stats">
                        <div class="d-flex justify-content-center">
                            <span class="mb-0 fw-bold d-none d-lg-block">Top Expenses</span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a class="link-success float-end text-decoration-underline" asp-page="./Expenses/Index" asp-route-Query="4" asp-route-Q="@DateTime.Now.Year" asp-route-PageNumber="1">
                                View All
                        </a>
                        </div>
                <div class="table-responsive-lg">
                    <table class="table table-sm align-middle text-center mb-0">
                        <thead class="p-0 m-0">
                            <tr>
                                <th class="p-0 m-0">
                                    Date
                                </th>
                                <th class="p-0 m-0">
                                    Amount
                                </th>
                                <th class="p-0 m-0">
                                    Category
                                </th>
                            </tr>
                        </thead>
                        <tbody>
                            @foreach (var expense in @Model.SummaryResponse.TopExpenses)
                            {
                                <tr>
                                    <td>
                                        @expense.Date
                                    </td>
                                    <td>
                                        @String.Format("{0:n}", expense.Amount)
                                    </td>
                                    <td>
                                        @expense.SubCategory
                                    </td>
                                </tr>
                            }
                        </tbody>
                    </table>
                </div>
                </div>
                @if (Model.SummaryResponse.SubCategoryPercentages != null && Model.SummaryResponse.SubCategoryPercentages.Values.Sum() > 0)
                {
                    <div class="col-6 d-flex">
                            <canvas id="subCategoryPie" class="chart-height align-self-center"></canvas>
                    </div>
                }
                </div>
            </div>
        }
        @if (Model.SummaryResponse.TopCategories.Count > 1)
        {
            <div class="col-12 col-lg-6 my-3">
                <div class="row shadow">
                    <div class="col-6 pie-stats">
                        <div class="d-flex justify-content-center">
                            <span class="mb-0 fw-bold d-none d-lg-block">Top Categories</span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a class="link-success float-end text-decoration-underline" asp-page="./Expenses/Categories/Index" asp-route-Query="3" asp-route-Q2=true asp-route-PageNumber="1">
                                View All
                            </a>
                        </div>
                        <div class="table-responsive-lg">
                            <table class="table table-sm align-middle text-center mb-0">
                                <thead class="p-0 m-0">
                                    <tr>
                                        <th class="p-0 m-0">
                                            Category
                                        </th>
                                        <th class="p-0 m-0">
                                            Amount
                                        </th>
                                        <th class="p-0 m-0">
                                            Count
                                        </th>
                                    </tr>
                                </thead>
                                <tbody>
                                    @foreach (var expense in @Model.SummaryResponse.TopCategories)
                                    {
                                        <tr>
                                            <td>
                                                @expense.Name
                                            </td>
                                            <td>
                                                @String.Format("{0:n}", expense.Amount)
                                            </td>
                                            <td>
                                                @expense.Count
                                            </td>
                                        </tr>
                                    }
                                </tbody>
                            </table>
                        </div>
                    </div>
                    @if (Model.SummaryResponse.MainCategoryPercentages != null && Model.SummaryResponse.MainCategoryPercentages.Values.Sum() > 0)
                    {
                        <div class="col-6 d-flex">
                            <canvas id="mainCategoryPie" class="chart-height align-self-center"></canvas>
                        </div>
                    }
                </div>
            </div>
        }
    </div>
    <div class="row gx-5">
        @if(Model.SummaryResponse.TopMerchants != null)
        {
        <div class="col-12 col-lg-6 my-3">
            <div class="row shadow">
                    <div class="col-6 pie-stats">
                    <div class="d-flex justify-content-center">
                        <span class="mb-0 fw-bold d-none d-lg-block">Top Merchants</span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a class="link-success float-end text-decoration-underline" asp-page="./Merchants/Index" asp-route-Query="3" asp-route-Q2=true asp-route-PageNumber="1">
                            View All
                        </a>
                    </div>
                    <div class="table-responsive-lg">
                        <table class="table table-sm align-middle text-center mb-0">
                            <thead class="p-0 m-0">
                                <tr>
                                    <th class="p-0 m-0">
                                        Merchant
                                    </th>
                                    <th class="p-0 m-0">
                                        Amount
                                    </th>
                                    <th class="p-0 m-0">
                                        Count
                                    </th>
                                </tr>
                            </thead>
                            <tbody>
                                @foreach (var expense in @Model.SummaryResponse.TopMerchants)
                                {
                                    <tr>
                                        <td>
                                            @expense.Name
                                        </td>
                                        <td>
                                            @String.Format("{0:n}", expense.Amount)
                                        </td>
                                        <td>
                                            @expense.Count
                                        </td>
                                    </tr>
                                }
                            </tbody>
                        </table>
                    </div>
                </div>
                @if (Model.SummaryResponse.MerchantPercentages != null && Model.SummaryResponse.MerchantPercentages.Values.Sum() > 0)
                {
                    <div class="col-6 d-flex">
                            <canvas id="merchantPie" class="chart-height align-self-center"></canvas>
                    </div>
                }
            </div>
        </div>
        }
        @if (Model.SummaryResponse.TopSources != null)
        {
            <div class="col-12 col-lg-6 my-3">
                <div class="row shadow">
                    <div class="col-6 pie-stats">
                        <div class="d-flex justify-content-center">
                            <span class="mb-0 fw-bold d-none d-lg-block">Top Income Sources</span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a class="link-success float-end text-decoration-underline" asp-page="./Sources/Index" asp-route-PageNumber="1">
                                View All
                            </a>
                        </div>
                        <div class="table-responsive-lg">
                            <table class="table table-sm align-middle text-center mb-0">
                                <thead class="p-0 m-0">
                                    <tr>
                                        <th class="p-0 m-0">
                                            Source
                                        </th>
                                        <th class="p-0 m-0">
                                            Amount
                                        </th>
                                        <th class="p-0 m-0">
                                            Count
                                        </th>
                                    </tr>
                                </thead>
                                <tbody>
                                    @foreach (var expense in @Model.SummaryResponse.TopSources)
                                    {
                                        <tr>
                                            <td>
                                                @expense.Name
                                            </td>
                                            <td>
                                                @String.Format("{0:n}", expense.Amount)
                                            </td>
                                            <td>
                                                @expense.Count
                                            </td>
                                        </tr>
                                    }
                                </tbody>
                            </table>
                        </div>
                    </div>
                    @if (Model.SummaryResponse.IncomeSourcePercentages != null && Model.SummaryResponse.IncomeSourcePercentages.Values.Sum() > 0)
                    {
                        <div class="col-6 d-flex">
                            <canvas id="incomeSourcePie" class="chart-height align-self-center"></canvas>
                        </div>
                    }
                </div>
            </div>
        }

    </div>
    <div class="row mb-3">
        @if (Model.SummaryResponse.AnnualSummaryChart != null)
        {
            <div class="col d-flex">
                <canvas id="annualSummaryChart" class="chart-height align-self-center shadow"></canvas>
            </div>
        }
    </div>
</div>
@await Html.PartialAsync("TransactionBreakdownModal", new TransactionBreakdownModalModel()
{
    Year = 0,
    Month= 0,
    Transactions = Model.SummaryResponse.TransactionBreakdown
})

@section Scripts {
    <script src="~/js/annual.js"></script>
    <script asp-append-version="true" src="https://cdn.jsdelivr.net/npm/chart.js"></script>
    @await Html.PartialAsync("OverallSummaryChart", new OverallSummaryChart()
    {
        ElementId = "overallSummaryChart",
        Title = "",
        Labels = JsonSerializer.Serialize(Model.SummaryResponse.OverallSummaryChart.Labels),
        BudgetedIncome = Model.SummaryResponse.OverallSummaryChart.BudgetedIncome,
        RealizedIncome = JsonSerializer.Serialize(Model.SummaryResponse.OverallSummaryChart.RealizedIncome),
        BudgetedExpenses = Model.SummaryResponse.OverallSummaryChart.BudgetedExpenses,
        RealizedExpenses = JsonSerializer.Serialize(Model.SummaryResponse.OverallSummaryChart.RealizedExpenses),
        BudgetedSavings = Model.SummaryResponse.OverallSummaryChart.BudgetedSavings,
        RealizedSavings = JsonSerializer.Serialize(Model.SummaryResponse.OverallSummaryChart.RealizedSavings)
    })
    @if(Model.SummaryResponse.IncomeStatistics.Any())
    {
        @await Html.PartialAsync("_ChartPartial", new _ChartPartial()
    {
        ChartType = ChartType.LineMultiAxis,
        UseDefaultColor = true,
        ElementId = "incomeStatisticsChart",
        Labels = JsonSerializer.Serialize(Model.SummaryResponse.IncomeStatistics.Select(x => x.Year).ToArray()),
        Dataset = JsonSerializer.Serialize(Model.SummaryResponse.IncomeStatistics.Select(x => x.Count).ToArray()).Replace(int.MaxValue.ToString(), "NaN"),
        Dataset2 = JsonSerializer.Serialize(Model.SummaryResponse.IncomeStatistics.Select(x => x.Average).ToArray()).Replace(int.MaxValue.ToString(), "NaN"),
        Dataset3 = JsonSerializer.Serialize(Model.SummaryResponse.IncomeStatistics.Select(x => x.Min).ToArray()).Replace(int.MaxValue.ToString(), "NaN"),
        Dataset4 = JsonSerializer.Serialize(Model.SummaryResponse.IncomeStatistics.Select(x => x.Max).ToArray()).Replace(int.MaxValue.ToString(), "NaN"),
        Title = "Annual Income Statistics",
        Responsive = true
    })
    }
    @if(Model.SummaryResponse.ExpenseStatistics.Any())
    {
    @await Html.PartialAsync("_ChartPartial", new _ChartPartial()
    {
        ChartType = ChartType.LineMultiAxis,
        UseDefaultColor = true,
        ElementId = "expenseStatisticsChart",
        Labels = JsonSerializer.Serialize(Model.SummaryResponse.ExpenseStatistics.Select(x => x.Year).ToArray()),
        Dataset = JsonSerializer.Serialize(Model.SummaryResponse.ExpenseStatistics.Select(x => x.Count).ToArray()).Replace(int.MaxValue.ToString(), "NaN"),
        Dataset2 = JsonSerializer.Serialize(Model.SummaryResponse.ExpenseStatistics.Select(x => x.Average).ToArray()).Replace(int.MaxValue.ToString(), "NaN"),
        Dataset3 = JsonSerializer.Serialize(Model.SummaryResponse.ExpenseStatistics.Select(x => x.Min).ToArray()).Replace(int.MaxValue.ToString(), "NaN"),
        Dataset4 = JsonSerializer.Serialize(Model.SummaryResponse.ExpenseStatistics.Select(x => x.Max).ToArray()).Replace(int.MaxValue.ToString(), "NaN"),
        Title = "Annual Expense Statistics",
        Responsive = true
    })
    }
        @if (Model.SummaryResponse.SubCategoryPercentages != null && Model.SummaryResponse.SubCategoryPercentages.Values.Sum() > 0)
    {
        @await Html.PartialAsync("CategoryPieChart", new CategoryPieChart(JsonSerializer.Serialize(Model.SummaryResponse.SubCategoryPercentages.Select(x => x.Key).ToArray()))
    {
        ElementId = "subCategoryPie",
        Dataset = JsonSerializer.Serialize(Model.SummaryResponse.SubCategoryPercentages.Select(x => x.Value).ToArray()),
        Title = "Sub Category Percentages",
        IsSummaryChart = true
    })
    }
    @if (Model.SummaryResponse.MainCategoryPercentages != null && Model.SummaryResponse.MainCategoryPercentages.Values.Sum() > 0)
    {
        @await Html.PartialAsync("CategoryPieChart", new CategoryPieChart(JsonSerializer.Serialize(Model.SummaryResponse.MainCategoryPercentages.Select(x => x.Key).ToArray()))
        {
            ElementId = "mainCategoryPie",
            Dataset = JsonSerializer.Serialize(Model.SummaryResponse.MainCategoryPercentages.Select(x => x.Value).ToArray()),
            Title = "Main Category Percentages",
            IsSummaryChart = true
        })
    }
    @if (Model.SummaryResponse.SubCategoryPercentages != null && Model.SummaryResponse.MerchantPercentages.Values.Sum() > 0)
    {
        @await Html.PartialAsync("CategoryPieChart", new CategoryPieChart(JsonSerializer.Serialize(Model.SummaryResponse.MerchantPercentages.Select(x => x.Key).ToArray()))
        {
            ElementId = "merchantPie",
            Dataset = JsonSerializer.Serialize(Model.SummaryResponse.MerchantPercentages.Select(x => x.Value).ToArray()),
            Title = "Merchant Percentages",
            IsSummaryChart = true
        })
    }
    @if (Model.SummaryResponse.IncomeSourcePercentages != null && Model.SummaryResponse.IncomeSourcePercentages.Values.Sum() > 0)
    {
        @await Html.PartialAsync("CategoryPieChart", new CategoryPieChart(JsonSerializer.Serialize(Model.SummaryResponse.IncomeSourcePercentages.Select(x => x.Key).ToArray()))
        {
            ElementId = "incomeSourcePie",
            Dataset = JsonSerializer.Serialize(Model.SummaryResponse.IncomeSourcePercentages.Select(x => x.Value).ToArray()),
            Title = "Income Category Percentages",
            IsSummaryChart = true
        })
    }
    @if (Model.SummaryResponse.AnnualSummaryChart != null)
    {
        @await Html.PartialAsync("AnnualMonthlySummaryChart", new AnnualMonthlySummaryChart()
        {
            IncomeDataset = Model.SummaryResponse.AnnualSummaryChart.IncomeDataset,
            ExpenseDataset = Model.SummaryResponse.AnnualSummaryChart.ExpenseDataset,
            SavingsDataset = Model.SummaryResponse.AnnualSummaryChart.SavingsDataset,
            ElementId = "annualSummaryChart",
            Title = "Summary By Year",
            Labels = Model.SummaryResponse.AnnualSummaryChart.Labels,
        })
    }
    @if (Model.SummaryResponse.SavingsChart != null && Model.SummaryResponse.TopExpenses.Count > 1)
    {
        @await Html.PartialAsync("AllTimeSavingsChart", new AllTimeSavingsChart()
        {
            ElementId = "savingsChart",
            Dataset = Model.SummaryResponse.SavingsChart.SavingsDataset,
            Title = "Savings By Year",
            Labels = Model.SummaryResponse.SavingsChart.Labels,
        })
    }
}