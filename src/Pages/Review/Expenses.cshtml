@page
@using CashTrack.Models.MerchantModels
@using CashTrack.Pages.Shared
@model CashTrack.Pages.Review.ExpensesModel
@{
    Layout = "_Layout";
}
<div class="container-fluid">
        @if (Model.Message != null)
    {
        <div style="position: relative;">
            <div class="toast fade show bg-success" role="alert" id="toast" style="position: absolute; right: 40%; top: 0; z-index:1200;">
                <div class="toast-body d-flex justify-content-between align-items-center">
                    <i class="bi bi-hand-thumbs-up text-white mx-3" role="img"
                   style="font-size: 1.5rem;"></i>
                    @Model.Message
                    <button type="button" class="btn-close" data-bs-dismiss="toast"></button>
                </div>
            </div>
        </div>
    }
        @if (!ViewData.ModelState.IsValid)
    {
        <div style="position: relative;">
            <div class="toast fade show bg-danger" role="alert" id="modelStateToast" style="position: absolute; right: 40%; top: 0; z-index:1200;">
                <div class="toast-body d-flex align-items-center" asp-validation-summary="All">
                    <i class="bi bi-x-circle text-white mx-3" role="img"
                   style="font-size: 1.5rem;"></i>
                </div>
            </div>
        </div>
    }
    @if (Model.ScriptResults != null)
    {
            <div style="position: relative;">
                <div class="toast fade show mt-3 bg-info" role="alert" id="scriptResultsToast" style="position: absolute; right: 0; top: 0; z-index:1200;">
                    <div class="toast-body d-flex justify-content-between align-items-center">
                        <i class="bi bi-hand-thumbs-up text-white mx-3" role="img"
                   style="font-size: 1.5rem;"></i>
                    @Model.ScriptResults
                        <button type="button" class="btn-close" data-bs-dismiss="toast"></button>
                    </div>
                </div>
            </div>
    }
    <ul class="nav nav-tabs">
        <li class="nav-item">
            <a asp-page="./Expenses" class="nav-link active">Expenses</a>
        </li>
        <li class="nav-item">
            <a asp-page="./Income" class="nav-link">Income</a>
        </li>
          <li class="nav-item dropdown">
              <a class="nav-link dropdown-toggle" data-bs-toggle="dropdown" role="button">Add</a>
              <ul class="dropdown-menu">
                  <li class="text-center">
                      <button class="dropdown-item fakelink text-center" id="addMerchant" data-bs-toggle="modal" data-bs-target="#addMerchantModal">Add Merchant</button>
                      </li>
                  <li class="text-center">
                      <button class="dropdown-item fakelink text-center" id="addSubCategory">Add Category</button>
                      </li>
                  <li><hr class="dropdown-divider"></li>
                  <li>
                      <form method="post" asp-page-handler="RunScript">
                      <button type="submit" class="dropdown-item fakelink">Import Transactions</button>
                              </form>
                              </li>
              </ul>
              </li>
              </ul>

              <div class="modal fade" id="addMerchantModal">
                  @await Html.PartialAsync("_AddMerchantPartial", new AddMerchantModal() { Returnurl = "~/Review/Expenses", SuggestOnLookup = true })
                  </div>

    @if(Model.ExpenseReviewResponse != null && Model.ExpenseReviewResponse.ListItems.Count() > 0)
    {
    <div class="row">
        <div class="table-responsive table-sm">
            <table class="table table-bordered table-hover table-sm mb-0 mt-2">
                <thead>
                    <tr class="text-center table-primary">
                        <th width="10%">
                            Date
                        </th>
                        <th width="10%">
                            Amount
                        </th>
                        <th width="15%">
                            Merchant
                        </th>
                        <th width="15%">
                            Category
                        </th>
                        <th width="40%">
                            Notes
                        </th>
                        <th width="10%">
                            Actions
                        </th>
                    </tr>
                </thead>

                <tbody>
                    @foreach (var expense in Model.ExpenseReviewResponse.ListItems)
                    {
                            <tr class="text-center">
                                <form method="post" id="editExpenseReviewForm-@expense.Id" asp-page-handler="ExpenseAdd">
                                    <input type="hidden" asp-for="@Model.SelectedExpenseId" value="@expense.Id" />
                                    @*TODO: In the future, add an option in settings whether to automatically create a new merchant if none existing are found.*@
                                    <input type="hidden" asp-for="@Model.SelectedExpense.CreateNewMerchant" value="false" />
                                <td>
                                    <input type="hidden" asp-for="@Model.SelectedExpense.Date" value="@expense.Date" />
                                @expense.Date.Date.ToShortDateString()
                                </td>
                                <td>
                                    <input type="hidden" asp-for="@Model.SelectedExpense.Amount" value="@expense.Amount" />
                                @expense.Amount
                                </td>
                                <td>
                                    <input class="form-control text-center form-control-sm" asp-for="@Model.SelectedExpense.Merchant" id="merchantName-@expense.Id" value="@expense.SuggestedMerchant" />
                                </td>
                                <td>
                                @{
                                    var dropdownList = new SelectList(Model.CategoryList, "Category", "Category", expense.SuggestedCategory);
                                }
                                    <select class="form-select text-center form-select-sm" 
                                id="category-@expense.Id" asp-for="SelectedExpense.SubCategory" 
                                asp-items="@dropdownList" value="@expense.SuggestedCategory">
                                    @{
                                        if (expense.SuggestedCategory == null)
                                        {
                                            <option value="" selected disabled hidden></option>
                                        }
                                    }
                                    </select>
                                </td>
                                <td>
                                    <input class="form-control mx-auto form-control-sm" asp-for="@Model.SelectedExpense.Notes" value="@expense.Notes" />
                                </td>
                                <td class="mx-0 px-0 py-0 my-0">

                                    <button style="background: none; padding: 0px; border: none;"
                                    type="submit" class="me-2 ms-1 py-0 my-0">
                                    <i class="bi bi-check2-circle text-primary" role="img"
                   style="font-size: 1.4rem;"></i>
                   </button>
                   @*TODO: Create a delete modal that removes the expense from the page*@
                   <button style="background: none; padding: 0px; border: none;"
                                    type="button" class="mx-0 px-0 py-0 my-0">
                       <i class="bi bi-x-circle text-primary" role="img"
                   style="font-size: 1.4rem;"></i>
                   </button>
                   @*TODO: Create split modal that then leads to a split page*@
                   <button style="background: none; padding: 0px; border: none;"
                                    type="button" class="ms-2 me-1 py-0 my-0" data-bs-toggle="modal" data-bs-target="#split-@expense.Id">
                                      <i class="bi bi-arrow-left-right text-primary" role="img"
                   style="font-size: 1.4rem;"></i>
                   </button>

                   </td>
                   </form>
                   </tr>
                    }
                </tbody>
            </table>
            <div class="row my-1">
                <div class="col-sm-6 col-lg-2 col-xl-2 m-auto">
                    @if (@Model.ExpenseReviewResponse.TotalCount > 0)
                    {
                        var currentCount = Model.ExpenseReviewResponse.PageNumber * @Model.ExpenseReviewResponse.PageSize;
                            <span class="text-muted">@(Math.Min(currentCount, Model.ExpenseReviewResponse.TotalCount)) of @Model.ExpenseReviewResponse.TotalCount</span>
                    }
                </div>
                <div class="col-sm-6 col-lg-4 col-xl-6 m-auto">
                    @*Total amount went here. Something else can go here maybe?*@
                </div>
                <div class="col-sm-12 col-lg-6 col-xl-4 my-0 py-0 gy-0">
                    @await Html.PartialAsync("_PaginationPartial",
                    new _PaginationPartialModel {
                    PathLink = "../Review/Expenses",
                    IsExpensePage = false,
                    PageNumber = Model.ExpenseReviewResponse.PageNumber,
                    TotalPages = Model.ExpenseReviewResponse.TotalPages,
                    })
                </div>
            </div>
        </div>
    </div>
    }
</div>
@section Scripts {
<script src="https://code.jquery.com/jquery-3.6.0.js" asp-append-version="true">
</script>
<script src="https://code.jquery.com/ui/1.13.1/jquery-ui.js" asp-append-version="true"></script>
<partial name="_ValidationScriptsPartial" />
<script type="text/javascript">

    @if(Model.ScriptResults != null)
    {
        @:$("#scriptResultsToast").show().delay(4000).fadeOut();
    }
    @if(!ModelState.IsValid)
    {
        @:$("#modelStateToast").show().delay(4000).fadeOut();
    }
    @if(Model.Message != null)
    {
        @:$("#toast").show().delay(2000).fadeOut();
    }

    $(document).ready(() => {

        //disables city and state inputs if merchant is online - for add merchant modal
        $("#addMerchantIsOnline").click(() => {
            console.log('hi');
            if($("#addMerchantIsOnline").is(":checked")){
                $("#addMerchantCity").prop("disabled", true);
                $("#addMerchantState").prop("disabled", true);
            }
            else{
                $("#addMerchantCity").prop("disabled", false);
                $("#addMerchantState").prop("disabled", false);
            }});

        @if(@Model.ExpenseReviewResponse != null && Model.ExpenseReviewResponse.ListItems.Any())
        {
            var ids = Model.ExpenseReviewResponse.ListItems.Select(x => x.Id).ToList();
            foreach(var id in ids)
            {
                //Autocomplete for merchant names
                <text>$("#merchantName-@id").on("input", () => {
                    let editSearchTerm = $("#merchantName-@id").val();
                    $.ajax({
                        url: `/api/merchants?merchantName=${editSearchTerm}`,
                        method: 'GET'
                    }).then((response) => {
                        $("#merchantName-@id").empty();
                        $("#merchantName-@id").autocomplete({ source: response });
                    });
                })
                </text>
            }
        }
    });
</Script>
}