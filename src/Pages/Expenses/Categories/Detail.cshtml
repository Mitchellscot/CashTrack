@page "{Id}"
@using CashTrack.Models.SubCategoryModels
@using CashTrack.Pages.Shared
@using System.Text.Json
@model CashTrack.Pages.Expenses.Categories.DetailModel
@{
    ViewData["Title"] = "Categories | ";
    Layout = "_Layout";
}

<div class="container">
    @await Html.PartialAsync("_MessagePartial",
    new _MessagePartial() { Message = Model.InfoMessage, MessageType = MessageType.Info, Show = Model.InfoMessage != null })
    @await Html.PartialAsync("_MessagePartial",
    new _MessagePartial() { Message = Model.SuccessMessage, MessageType = MessageType.Success, Show = Model.SuccessMessage != null })
    @await Html.PartialAsync("_MessagePartial",
    new _MessagePartial() {MessageType = MessageType.Danger, Show = !ViewData.ModelState.IsValid })

    <div class="row mb-0">
        <div class="d-flex align-content-center justify-content-center col ms-5 ps-5">
            <h3 class="fw-bold">@Model.SubCategory.Name</h3>
            <div class="text-muted align-self-center ms-2 fst-italic">@Model.SubCategory.MainCategoryName</div>
        </div>
        <div class="col-auto d-flex align-content-center justify-content-center mb-0 mt-2">
            <a class="link-primary text-decoration-underline" href="#" data-bs-toggle="modal" data-bs-target="#editSubCategoryModal">
                Edit
            </a>&nbsp; | &nbsp;
            <a class="link-danger text-decoration-underline" href="#" data-bs-toggle="modal" data-bs-target="#deleteSubCategoryModal">
                Delete
            </a>
        </div>
    </div>

    @*Delete Model*@
    <div class="modal fade" id="deleteSubCategoryModal">
        <div class="modal-dialog" role="document">
            <div class="modal-content">
                <div class="modal-header text-center">
                    <h5 class="modal-title text-center">
                        <strong>Are you sure you want to Delete this Category?</strong>
                    </h5>
                    <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close">
                        <span aria-hidden="true"></span>
                    </button>
                </div>
                <div class="modal-footer d-flex justify-content-evenly">
                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">
                        Cancel
                    </button>
                    <form method="post">
                        <button name="id"
                                value="@Model.SubCategory.Id"
                                type="submit"
                                class="btn btn-danger"
                                asp-page-handler="Delete">
                            DELETE
                        </button>
                    </form>
                </div>
            </div>
        </div>
    </div>
    @*End Delete Modal*@
    <div class="modal fade" id="editSubCategoryModal">
        @await Html.PartialAsync("AddEditSubCategoryModal", new AddEditSubCategoryModal() {
        Name = Model.SubCategory.Name,
        InUse = Model.SubCategory.InUse,
        Notes = Model.SubCategory.Notes,
        MainCategoryList = new SelectList(Model.MainCategoryList, "Id", "Category", Model.SubCategory.MainCategoryId),
        IsEdit = true,
        MainCategoryId = Model.SubCategory.MainCategoryId,
        ReturnUrl="~/Expenses/Categories/Index"
        })
    </div>

    <div class="container border shadow">
        <div class="row">
            <div class="col-4 col-lg-3 mt-3">
                <ul class="list-group text-center shadow">
                    <li class="list-group-item d-flex justify-content-between">
                        <span class="d-none d-md-block">Month: &nbsp;</span>
                        <span class="fw-bold text-primary">@Model.SubCategory.ExpenseTotals.TotalSpentThisMonth</span>
                    </li>
                    <li class="list-group-item d-flex justify-content-between">
                        <span class="d-none d-md-block">Year: &nbsp;</span>
                        <span class="fw-bold text-primary responsive-text">@Model.SubCategory.ExpenseTotals.TotalSpentThisYear</span>
                    </li>
                    <li class="list-group-item d-flex justify-content-between">
                        <span class="d-none d-md-block">Total: &nbsp;</span>
                        <span class="fw-bold text-primary responsive-text">
                            @String.Format("{0:n}", Model.SubCategory.ExpenseTotals.TotalSpentAllTime)
                        </span>
                    </li>
                    <li class="list-group-item d-flex justify-content-between">
                        <span class="d-none d-md-block">Min: &nbsp;</span>
                        <span class="fw-bold text-primary responsive-text">
                            @String.Format("{0:n}", Model.SubCategory.ExpenseTotals.Min)
                        </span>
                    </li>
                    <li class="list-group-item d-flex justify-content-between">
                        <span class="d-none d-md-block">Max: &nbsp;</span>
                        <span class="fw-bold text-primary responsive-text">
                            @String.Format("{0:n}", Model.SubCategory.ExpenseTotals.Max)
                        </span>
                    </li>
                    <li class="list-group-item d-flex justify-content-between">
                        <span class="d-none d-md-block">Average: &nbsp;</span>
                        <span class="fw-bold text-primary responsive-text">
                            @String.Format("{0:n}", Model.SubCategory.ExpenseTotals.Average)
                        </span>
                    </li>
                    <li class="list-group-item d-flex justify-content-between">
                        <span class="d-none d-md-block">Count: &nbsp;</span>
                        <span class="fw-bold text-primary responsive-text">
                            @Model.SubCategory.ExpenseTotals.Count
                        </span>
                    </li>
                </ul>
            </div>

            <div class="col-4 col-lg-5 px-3 shadow">
                <form method="get">
                    <div class="input-group mx-auto m-3">
                        <span class="input-group-text d-none d-lg-block">Name</span>
                        <select data-val="true"
                                onchange="this.form.submit()"
                                asp-for=@Model.SearchTerm
                                asp-items="@Model.SubCategoryList"
                                class="form-select text-center"
                                id="addEditSubCategoryState">
                        </select>
                    </div>
                </form>

                <div class="input-group mx-auto m-3">
                    <span class="input-group-text d-none d-lg-block">Category</span>
                    <input type="text" class="white-on-disabled form-control text-center"
                           asp-for="@Model.SubCategory.MainCategoryName" disabled
                           value="@Model.SubCategory.MainCategoryName" />
                </div>

                <div class="input-group mx-auto m-3">
                    @{
                        var isActiveText = Model.SubCategory.InUse ? "Active" : "Inactive";
                    }
                    <span class="input-group-text d-none d-lg-block">In Use</span>
                    <input type="text"
                           class="white-on-disabled form-control text-center"
                           asp-for="@Model.SubCategory.InUse"
                           disabled
                           value="@isActiveText" />
                </div>
                <div class="form-floating mx-auto">
                    <textarea type="text"
                              class="form-control white-on-disabled py-0 notes-height"
                              id="categoryNotes"
                              asp-for="@Model.SubCategory.Notes" disabled></textarea>
                    @if (string.IsNullOrEmpty(Model.SubCategory.Notes))
                    {
                        <label for="categoryNotes">Description</label>
                    }
                </div>
            </div>

            <div class="col-4 shadow">
                <div class="d-flex justify-content-center">
                    <span class="mb-0 fw-bold d-none d-lg-block">
                        Recent Expenses
                    </span>
                    &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
                    <a class="link-success float-end text-decoration-underline"
                       asp-page="/Expenses/Index" asp-route-Query="8"
                       asp-route-Q="@Model.SubCategory.Id"
                       asp-route-pageNumber="1">
                        View All
                    </a>
                </div>
                <div class="table-responsive-lg">
                    <table class="table table-sm align-middle text-center mb-0">
                        <thead class="p-0 m-0">
                            <tr>
                                <th class="p-0 m-0">
                                    Date
                                </th>
                                <th class="p-0 m-0">
                                    Amount
                                </th>
                                <th class="p-0 m-0">
                                    Merchant
                                </th>
                            </tr>
                        </thead>
                        <tbody>
                            @foreach (var expense in @Model.SubCategory.RecentExpenses)
                            {
                                <tr>
                                    <td>
                                        @expense.Date
                                    </td>
                                    <td>
                                        @String.Format("{0:n}", expense.Amount)
                                    </td>
                                    <td>
                                        @expense.Merchant
                                    </td>
                                </tr>
                            }
                        </tbody>
                    </table>
                </div>
            </div>
        </div>
        <hr />
        <div class="row g-3">
            @if (Model.SubCategory.AnnualExpenseStatistics.Any())
            {
                <div class="col-12 col-xl-6 d-flex">
                    <canvas id="annualExpensesChart" height="400" class="chart-height shadow align-content-center px-1"></canvas>
            </div>
            }
            @if(Model.SubCategory.MonthlyExpenseStatistics.Any())
            {
                <div class="col-12 col-xl-6 d-flex">
                    <canvas id="monthlyExpensesChart" height="400" class="chart-height shadow align-content-center px-1"></canvas>
                </div>
            }
            @if (Model.SubCategory.AnnualExpenseStatistics.Any())
            {
                <div class="col-12 col-xl-6 d-flex">
                    <canvas id="annualStatisticsChart" height="400" class="chart-height shadow align-content-center px-1"></canvas>
            </div>
            }
            @if (Model.SubCategory.MonthlyExpenseStatistics.Any())
            {
                <div class="col-12 col-xl-6 d-flex">
                    <canvas id="monthlyStatisticsChart" height="400" class="chart-height shadow align-content-center px-1"></canvas>
            </div>
            }
            @if (Model.SubCategory.MerchantPurchaseTotals.Count() > 1)
            {
                <div class="col-12 col-md-6 d-flex">
                    <canvas id="categoryTotalsPie" height="400" class="chart-height shadow align-content-center px-1"></canvas>
            </div>
            }
            @if (Model.SubCategory.MerchantPurchaseOccurances.Count() > 1)
            {
            <div class="col-12 col-md-6 d-flex">
                <canvas id="categoryOccurancesDonut" height="400" class="chart-height shadow align-content-center px-1"></canvas>
            </div>
            }
        </div>

    </div>
    </div>
    @section Scripts {
        <script asp-append-version="true" src="https://cdn.jsdelivr.net/npm/chart.js@4.1.1/dist/chart.umd.js"></script>
        @if (Model.SubCategory.AnnualExpenseStatistics.Any())
        {
            @await Html.PartialAsync("_ChartPartial", new _ChartPartial(){
                ChartType = ChartType.Bar,
                UseDefaultColor = true,
                ElementId = "annualExpensesChart",
                Labels = JsonSerializer.Serialize(Model.SubCategory.AnnualExpenseStatistics.Select(x => x.Year).ToArray()),
                Dataset = JsonSerializer.Serialize(Model.SubCategory.AnnualExpenseStatistics.Select(x => x.Total).ToArray()),
                Title = "Annual Expense Totals",
                Responsive = true
           })
           }
            @if (Model.SubCategory.AnnualExpenseStatistics.Any())
            {
                @await Html.PartialAsync("_ChartPartial", new _ChartPartial()
            {
                ChartType = ChartType.LineMultiAxis,
                UseDefaultColor = true,
                ElementId = "annualStatisticsChart",
                Labels = JsonSerializer.Serialize(Model.SubCategory.AnnualExpenseStatistics.Select(x => x.Year).ToArray()),
                Dataset = JsonSerializer.Serialize(Model.SubCategory.AnnualExpenseStatistics.Select(x => x.Count).ToArray()),
                Dataset2 = JsonSerializer.Serialize(Model.SubCategory.AnnualExpenseStatistics.Select(x => x.Average).ToArray()),
                Dataset3 = JsonSerializer.Serialize(Model.SubCategory.AnnualExpenseStatistics.Select(x => x.Min).ToArray()),
                Dataset4 = JsonSerializer.Serialize(Model.SubCategory.AnnualExpenseStatistics.Select(x => x.Max).ToArray()),
                Title = "Annual Expense Statistics",
                Responsive = true
            })
            }
            @if (Model.SubCategory.MonthlyExpenseStatistics.Any())
            {
                @await Html.PartialAsync("_ChartPartial", new _ChartPartial()
                {
                    ChartType = ChartType.Bar,
                    UseDefaultColor = true,
                    ElementId = "monthlyExpensesChart",
                    Labels = JsonSerializer.Serialize(Model.SubCategory.MonthlyExpenseStatistics.Select(x => x.Month).ToArray()),
                    Dataset = JsonSerializer.Serialize(Model.SubCategory.MonthlyExpenseStatistics.Select(x => x.Total).ToArray()),
                    Title = "Monthly Expense Totals",
                    Responsive = true
            })
            }
            @if (Model.SubCategory.MonthlyExpenseStatistics.Any())
            {
                @await Html.PartialAsync("_ChartPartial", new _ChartPartial()
            {
                ChartType = ChartType.LineMultiAxis,
                UseDefaultColor = true,
                ElementId = "monthlyStatisticsChart",
                Labels = JsonSerializer.Serialize(Model.SubCategory.MonthlyExpenseStatistics.Select(x => x.Month).ToArray()),
                Dataset = JsonSerializer.Serialize(Model.SubCategory.MonthlyExpenseStatistics.Select(x => x.Count).ToArray()),
                Dataset2 = JsonSerializer.Serialize(Model.SubCategory.MonthlyExpenseStatistics.Select(x => x.Average).ToArray()),
                Dataset3 = JsonSerializer.Serialize(Model.SubCategory.MonthlyExpenseStatistics.Select(x => x.Min).ToArray()),
                Dataset4 = JsonSerializer.Serialize(Model.SubCategory.MonthlyExpenseStatistics.Select(x => x.Max).ToArray()),
                Title = "Monthly Expense Statistics",
                Responsive = true
            })
            }
            @if (Model.SubCategory.MerchantPurchaseTotals.Count() > 1)
            {
                @await Html.PartialAsync("_ChartPartial", new _ChartPartial()
            {
                ChartType = ChartType.Pie,
                UseDefaultColor = false,
                ElementId = "categoryTotalsPie",
                Labels =  JsonSerializer.Serialize(Model.SubCategory.MerchantPurchaseTotals.Select(x => x.Key).ToArray()),
                Dataset = JsonSerializer.Serialize(Model.SubCategory.MerchantPurchaseTotals.Select(x => x.Value).ToArray()),
                Title = "Amount By Category",
                DisplayLabels = Model.SubCategory.AnnualExpenseStatistics.Count() < 11,
                Responsive = true
            })
            }
            @if (Model.SubCategory.MerchantPurchaseOccurances.Count() > 1)
            {
                @await Html.PartialAsync("_ChartPartial", new _ChartPartial()
            {
                ChartType = ChartType.Donut,
                UseDefaultColor = false,
                ElementId = "categoryOccurancesDonut",
                Labels = JsonSerializer.Serialize(Model.SubCategory.MerchantPurchaseOccurances.Select(x => x.Key).ToArray()),
                Dataset = JsonSerializer.Serialize(Model.SubCategory.MerchantPurchaseOccurances.Select(x => x.Value).ToArray()),
                Title = "Purchase Frequency By Category",
                DisplayLabels = Model.SubCategory.AnnualExpenseStatistics.Count() < 11,
                Responsive = true
        })
        }
    }
