@page
@using CashTrack.Common;
@using CashTrack.Models.Common
@using CashTrack.Models.ExpenseModels
@using CashTrack.Models.SubCategoryModels
@using CashTrack.Pages.Shared
@model CashTrack.Pages.Expenses.Index
@{
    ViewData["Title"] = "- Expenses";
    Layout = "_Layout";
}

<div class="container-fluid">
    @await Html.PartialAsync("_MessagePartial",
    new _MessagePartial() { Message = Model.InfoMessage, MessageType = MessageType.Info, Show = Model.InfoMessage != null })
    @await Html.PartialAsync("_MessagePartial",
    new _MessagePartial() { Message = Model.SuccessMessage, MessageType = MessageType.Success, Show = Model.SuccessMessage != null })
    @await Html.PartialAsync("_MessagePartial",
    new _MessagePartial() {MessageType = MessageType.Danger, Show = !ViewData.ModelState.IsValid })
    @await Html.PartialAsync("_MessagePartial",
    new _MessagePartial() { Message = "No Expenses Found!", MessageType = MessageType.Info, Show = Model.ExpenseResponse != null && Model.ExpenseResponse.TotalCount == 0 })

    <div class="row mb-1">
        <div class="col-xl-6 col-12 mb-1 mr-auto">
            <form method="get" class="shadow-sm">
                <div class="input-group">
                    <div class="input-group-prepend d-none d-sm-block">
                        <div class="input-group-text rounded-0 rounded-start">Search</div>
                    </div>
                    <select data-width="100%" asp-items="Model.QueryOptions" class="form-select text-center" id="querySelect" asp-for="Query">
                    </select>
                    <select id="categorySelect" data-width="100%" class="form-select text-center display-none" asp-for="@Model.Q">
                    </select>
                    <input id="qInput" data-val="true" asp-for="@Model.Q" type="@Model.InputType" class="form-control w-50">
                    <input id="q2Input" data-val="true" asp-for=@Model.Q2 type="date" class="form-control display-none">
                    <button class="btn btn-secondary rounded-end" type="submit" asp-route-pageNumber="1">
                        @await Html.PartialAsync("Icons", new Icons()
                        {
                            Icon = Icon.Search,
                            Color = IconColors.White,
                            Height=20,
                            Width=20,
                            Classes="mx-3"
                        })
                    </button>
                    <input type="hidden" asp-for="@Model.PageNumber" value="1" />
                </div>
            </form>
        </div>
        <div class="col-xl-3 col-6 px-xl-0 d-none d-sm-block">
            <div class="btn-group" role="group">
                <a asp-page="./Index" asp-route-query="10" asp-route-pageNumber="@Model.PageNumber" class="btn btn-primary">Month</a>
                <a asp-page="./Index" asp-route-query="11" asp-route-pageNumber="@Model.PageNumber" class="btn btn-primary">Quarter</a>
                <a asp-page="./Index" asp-route-query="12" asp-route-pageNumber="@Model.PageNumber" class="btn btn-primary">Year</a>
                <a asp-page="./Index" asp-route-query="13" asp-route-pageNumber="@Model.PageNumber" class="btn btn-primary thirty-days-button">30 Days</a>
            </div>
        </div>
        <div class="col-3 col-xl-1 d-none d-sm-block">
            <span class="validation-text" asp-validation-for="@Model.Q"></span>
        </div>
        <div class="col-xs-12 col-xl-2 col-3 me-xl-0 d-flex justify-content-md-end">
            <button class="btn btn-primary text-wrap btn-height" data-bs-toggle="modal" data-bs-target="#addExpenseModal" id="addExpenseButton">Add Expense</button>
        </div>
    </div>
    @* Add Expense Modal *@
    <div class="modal fade" id="addExpenseModal" data-bs-backdrop="false">
        @await Html.PartialAsync("AddEditExpenseModal",
        new AddEditExpenseModal() {
            IsEdit = false, 
            ReturnUrl = "/Expenses/Index", 
            SubCategoryList = new SelectList(Model.CategoryList, "Id", "Category"), 
            Date= DateTime.Today, 
            MainCategoryList = new SelectList(Model.MainCategoryList, "Id", "Category"),
            PageNumber = Model.PageNumber,
            Query = Model.Query,
            Q = Model.Q,
            Q2 = Model.Q2,
            ShowAddCategoryButton = true
        });
    </div>
    @*End Add Expense Modal*@
    <div class="modal fade" id="addEditSubCategoryModal" data-bs-backdrop="false">
        @await Html.PartialAsync("AddEditSubCategoryModal", new AddEditSubCategoryModal() 
        { 
            ReturnUrl="/Expenses/Index#addExpenseModal#addExpenseModal", 
            InUse=true, 
            IsEdit=false, 
            MainCategoryList= new SelectList(Model.MainCategoryList, "Id", "Category")
        })
        </div>
    @if (Model.ExpenseResponse != null && Model.ExpenseResponse.TotalCount > 0)
    {
        <div class="row">
            <div class="table-responsive">
                <table class="table table-bordered table-hover table-sm mb-3 shadow">
                    <thead>
                        <tr class="text-center table-primary">
                            <th width="10%">
                                Date
                            </th>
                            <th width="10%">
                                Amount
                            </th>
                            <th width="10%">
                                Merchant
                            </th>
                            <th width="10%">
                                Category
                            </th>
                            <th width="10%">
                                Main
                            </th>
                            <th width="10%">
                                Actions
                            </th>
                        </tr>
                    </thead>
                    <tbody>
                        @foreach (Expense expense in Model.ExpenseResponse.ListItems)
                        {
                            <tr class="text-center">
                                <td>
                                    <a asp-page="/Expenses/Index"
                                        asp-route-Query="0"
                                        asp-route-Q=@expense.Date.Date.ToString("yyyy-MM-dd")
                                        asp-route-pageNumber="1"
                                        class="table-link">
                                    @expense.Date.Date.ToShortDateString()
                                    </a>
                                </td>
                                <td>
                                    <a asp-page="/Expenses/Index"
                                       asp-route-Query="5"
                                       asp-route-Q=@expense.Amount
                                       asp-route-pageNumber="1"
                                       class="table-link">
                                    @String.Format("{0:n}", expense.Amount)
                                    </a>
                                </td>
                                <td>
                                    <a class="table-link" asp-page="../Merchants/Detail" asp-route-id="@expense.MerchantId">@expense.Merchant</a>
                                </td>
                                <td>
                                    <a class="table-link" asp-page="./Categories/Detail" asp-route-id="@expense.SubCategoryId">
                                        @expense.SubCategory
                                    </a>
                                </td>
                                <td>
                                    @expense.MainCategory
                                </td>
                                <td>
                                    @if (!string.IsNullOrEmpty(expense.RefundNotes) && !string.IsNullOrEmpty(expense.Notes))
                                    {
                                        <button type="button" data-bs-toggle="modal"
                                    data-bs-target="#refundNotes-@expense.Id" class="icon-button pe-2 ps-0 ms-0">
                                                    @await Html.PartialAsync("Icons", new Icons()
                                                    {
                                                        Icon = Icon.Reboot,
                                                        Color = IconColors.Primary,
                                                        Height=22,
                                                        Width=22,
                                                        Classes="icon-size-lg action-icon"
                                                    })
                                        </button>
                                        @*Begin Refund Notes Modal*@
                                        <div class="modal fade" id="refundNotes-@expense.Id">
                                            @await Html.PartialAsync("_ShortMessageModal", new _ShortMessageModal() {
                                Title="Refund Notes", Message = expense.RefundNotes});
                                        </div>
                                        @*End Refund Notes Modal*@
                                    }
                                    else if (string.IsNullOrEmpty(expense.RefundNotes))
                                    {
                                        <button type="button" data-bs-toggle="modal" disabled
                                    data-bs-target="#detailModal-@expense.Id" class="icon-button pe-2 ps-0 ms-0">
                                            @await Html.PartialAsync("Icons", new Icons()
                                            {
                                                Icon = Icon.Reboot,
                                                Color = IconColors.Primary,
                                                Height=20,
                                                Width=20,
                                                Classes="visibility-hidden"
                                            })
                                            @await Html.PartialAsync("Icons", new Icons()
                                            {
                                                Icon = Icon.FileEarmarkCheck,
                                                Color = IconColors.Primary,
                                                Height=20,
                                                Width=20,
                                                Classes="visibility-hidden"
                                            })
                                        </button>
                                    }
                                    @if (!string.IsNullOrEmpty(expense.Notes))
                                    {
                                        <button type="button" data-bs-toggle="modal"
                                        data-bs-target="#detailModal-@expense.Id" class="icon-button pe-2 ps-0 ms-0">
                                    @await Html.PartialAsync("Icons", new Icons()
                                    {
                                        Icon = Icon.FileEarmarkCheck,
                                        Color = IconColors.Primary,
                                        Height=20,
                                        Width=20,
                                        Classes="action-icon"
                                    })
                                        </button>
                                        @*Begin Detail Modal*@
                                        <div class="modal fade" id="detailModal-@expense.Id">
                                            @await Html.PartialAsync("_ShortMessageModal", new _ShortMessageModal()
                                            { Title="Notes", Message = expense.Notes });
                                        </div>
                                        @*End Detail Modal*@
                                    }
                                    else if (string.IsNullOrEmpty(expense.Notes) && !string.IsNullOrEmpty(expense.RefundNotes))
                                    {
                                        <button type="button" data-bs-toggle="modal" disabled
                                    data-bs-target="#detailModal-@expense.Id" class="icon-button pe-2 ps-0 ms-0">
                                            @await Html.PartialAsync("Icons", new Icons()
                                            {
                                                Icon = Icon.FileEarmarkCheck,
                                                Color = IconColors.Primary,
                                                Height=20,
                                                Width=20,
                                                Classes="visibility-hidden"
                                            })
                                        </button>
                                        <button type="button" data-bs-toggle="modal"
                                    data-bs-target="#refundNotes-@expense.Id" class="icon-button pe-2 ps-0 ms-0">
                                            @await Html.PartialAsync("Icons", new Icons()
                                            {
                                                Icon = Icon.Reboot,
                                                Color = IconColors.Primary,
                                                Height=20,
                                                Width=20,
                                                Classes="action-icon"
                                            })
                                        </button>
                                        @*Begin Refund Notes Modal*@
                                        <div class="modal fade" id="refundNotes-@expense.Id">
                                            @await Html.PartialAsync("_ShortMessageModal", new _ShortMessageModal { Title="Refund Notes", Message = expense.RefundNotes})
                                        </div>
                                        @*End Refund Notes Modal*@
                                    }
                                    else
                                    {
                                        <button type="button" data-bs-toggle="modal" disabled
                                    data-bs-target="#detailModal-@expense.Id" class="icon-button pe-2 ps-0 ms-0">
                                            @await Html.PartialAsync("Icons", new Icons()
                                            {
                                                Icon = Icon.FileEarmarkCheck,
                                                Color = IconColors.Primary,
                                                Height=20,
                                                Width=20,
                                                Classes="visibility-hidden"
                                            })
                                        </button>
                                    }
                                    <button type="button"
                                    data-bs-toggle="modal"
                                    data-bs-target="#editExpenseModal-@expense.Id"
                                    class="icon-button px-2 load-main-category-edit-modal-js">
                        @*when the icon is clicked, even though the javascript is on the button itself, the data is pulled from the icon...*@
                                    <svg xmlns="http://www.w3.org/2000/svg" width="20" height="20" fill=IconColors.Primary viewBox="0 0 16 16" class="action-icon" data-sub-category-id=@expense.SubCategoryId data-id=@expense.Id>
                                        <path d="M12.146.146a.5.5 0 0 1 .708 0l3 3a.5.5 0 0 1 0 .708l-10 10a.5.5 0 0 1-.168.11l-5 2a.5.5 0 0 1-.65-.65l2-5a.5.5 0 0 1 .11-.168l10-10zM11.207 2.5 13.5 4.793 14.793 3.5 12.5 1.207 11.207 2.5zm1.586 3L10.5 3.207 4 9.707V10h.5a.5.5 0 0 1 .5.5v.5h.5a.5.5 0 0 1 .5.5v.5h.293l6.5-6.5zm-9.761 5.175-.106.106-1.528 3.821 3.821-1.528.106-.106A.5.5 0 0 1 5 12.5V12h-.5a.5.5 0 0 1-.5-.5V11h-.5a.5.5 0 0 1-.468-.325z" />
                                    </svg>
                                    </button>
                                    @* Edit Expense Modal *@
                                    <div class="modal fade" id="editExpenseModal-@expense.Id">
                                        @await Html.PartialAsync("AddEditExpenseModal",
                                new AddEditExpenseModal() {
                                IsEdit = true,
                                ReturnUrl = "/Expenses/Index",
                                SubCategoryId = expense.SubCategoryId,
                                SubCategoryList = new SelectList(Model.CategoryList, "Id", "Category",
                                expense.SubCategoryId),
                                Date=expense.Date,
                                Amount = expense.Amount,
                                ExcludeFromStatistics = expense.ExcludeFromStatistics,
                                Merchant = expense.Merchant,
                                Notes = expense.Notes,
                                Id = expense.Id,
                                PageNumber = Model.PageNumber,
                                Query = Model.Query,
                                Q = Model.Q,
                                ShowAddCategoryButton = true,
                                Q2 = Model.Q2
                                });
                                    </div>
                                    <div class="modal fade" id="addEditSubCategoryModal-@expense.Id">
                                        @await Html.PartialAsync("AddEditSubCategoryModal", new AddEditSubCategoryModal() 
                                        { 
                                            ReturnUrl="/Expenses/Index#addExpenseModal", 
                                            InUse=true, 
                                            IsEdit=false, 
                                            MainCategoryList= new SelectList(Model.MainCategoryList, "Id", "Category") 
                                        })
                                    </div>

                                    @*End Edit Expense Modal*@
                                    <button type="button" data-bs-toggle="modal"
                                    data-bs-target="#deleteModal-@expense.Id" class="icon-button ps-2 ps-0 me-0">
                                            @await Html.PartialAsync("Icons", new Icons()
                                            {
                                                Icon = Icon.Trash,
                                                Color = IconColors.Primary,
                                                Height=20,
                                                Width=20,
                                                Classes="action-icon"
                                            })
                                    </button>
                                    @*Delete Model*@
                                    <div class="modal fade" id="deleteModal-@expense.Id">
                                        <div class="modal-dialog" role="document">
                                            <div class="modal-content">
                                                <div class="modal-header text-center">
                                                    <h5 class="modal-title text-center">
                                                        <strong>Are you sure you want to Delete this Expense?</strong>
                                                    </h5>
                                                    <button 
                                                        type="button" 
                                                        class="btn-close" 
                                                        data-bs-dismiss="modal">
                                                    </button>
                                                </div>

                                                <div class="modal-footer d-flex justify-content-evenly">
                                                    <button type="button" 
                                                        class="btn btn-secondary" 
                                                        data-bs-dismiss="modal">Cancel</button>
                                                    <form method="post"
                                                  asp-page="./Index"
                                                  asp-page-handler="Delete"
                                                  asp-route-expenseId="@expense.Id"
                                                  asp-route-query="@Model.Query"
                                                  asp-route-q="@Model.Q"
                                                  asp-route-q2="@Model.Q2"
                                                  asp-route-pageNumber="@Model.PageNumber">
                                                        <button type="submit" class="btn btn-danger">DELETE</button>
                                                    </form>
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                    @*End Delete Modal*@
                                </td>
                            </tr>
                        }
                    </tbody>
                </table>
                <div class="row my-1">
                    <div class="col-sm-6 col-lg-2 col-xl-2 m-auto">
                        @if (@Model.ExpenseResponse.TotalCount > 0)
                        {
                            var currentCount = Model.ExpenseResponse.PageNumber * @Model.ExpenseResponse.PageSize;
                            <span class="text-muted" id="totalPages">
                                @(Math.Min(currentCount, Model.ExpenseResponse.TotalCount)) of @Model.ExpenseResponse.TotalCount
                            </span>
                        }
                    </div>
                    <div class="col-sm-6 col-lg-4 col-xl-6 m-auto">
                        @if (@Model.ExpenseResponse.TotalAmount > 0)
                        {
                            <div class="text-center">
                                <strong class="p-0" id="totalAmount">Total:</strong> $@String.Format("{0:n}", Model.ExpenseResponse.TotalAmount)
                            </div>
                        }
                    </div>
                    <div class="col-sm-12 col-lg-6 col-xl-4 my-0 py-0 gy-0">
                        @await Html.PartialAsync("_PaginationPartial",
                    new _PaginationPartialModel() {
                    PathLink = "../Expenses/Index",
                    IsExpensePage = true,
                    PageNumber = Model.ExpenseResponse.PageNumber,
                    TotalPages = Model.ExpenseResponse.TotalPages,
                    Query = Model.Query,
                    q = Model.Q,
                    q2 = Model.Q2
                    })
                    </div>
                </div>
            </div>
        </div>
    }
</div>

@section Scripts {
<script src="~/js/expenses.js" asp-append-version="true"></script>
<script src="~/js/jquery.js"></script>
<script src="~/js/jqueryVal.js"></script>
<script src="~/js/jqueryValUnob.js"></script>
}