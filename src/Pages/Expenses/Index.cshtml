@page
@using CashTrack.Models.Common
@model CashTrack.Pages.Expenses.Index
@{
    Layout = "_Layout";
}

<div class="container-fluid">
    <form method="get" id="queryForm">

        <div class="row mb-3 flex-nowrap">

            <div class="col-5">
                <div class="input-group">
                    <div class="input-group-prepend">
                        <div class="input-group-text">Search</div>
                    </div>
                    <select data-width="100%" asp-items="Model.queryOptions" class="form-select text-center" id="querySelect" asp-for="query">
                    </select>
                    <select style="display: none;" data-width="100%" class="form-select text-center" id="categorySelect" asp-for="@Model.q">
                    </select>
                    <input data-val="true" asp-for=@Model.q type="@Model.inputType" class="form-control w-50 text-center" id="qInput">
                    <input style="display: none;" data-val="true" asp-for=@Model.q2 type="date" class="form-control" id="q2Input">
                    <button class="btn btn-secondary" type="submit">
                        <i class="bi bi-search text-white mx-3" role="img"
                           style="font-size: 1rem;"></i>
                    </button>
                </div>
            </div>
            <div class="col-3 p-0">
                <div class="btn-group" role="group" aria-label="Basic example">
                    <div class="input-group-prepend">
                        <div class="input-group-text">Current</div>
                    </div>
                    <a asp-page="./Index" asp-route-query="11" asp-route-pageNumber="@Model.pageNumber" type="button" class="btn btn-secondary">Month</a>
                    <a asp-page="./Index" asp-route-query="12" asp-route-pageNumber="@Model.pageNumber" type="button" class="btn btn-secondary">Quarter</a>
                    <a asp-page="./Index" asp-route-query="13" asp-route-pageNumber="@Model.pageNumber" type="button" class="btn btn-secondary">Year</a>
                    <a asp-page="./Index" asp-route-query="14" asp-route-pageNumber="@Model.pageNumber" type="button" class="btn btn-secondary">30 Days</a>
                </div>
            </div>
            @if (Model.Message != null)
            {
                <div class="col-3 text-center border rounded my-0 py-0 alert alert-success align-self-center">@Model.Message</div>
            }
            @if (Model.Message == null && Model.ExpenseResponse != null)
            {
                <div class="col-3 text-center border rounded align-self-center">
                    <div>
                        <strong class="p-3 m-1">Total: $ @Model.ExpenseResponse.TotalAmount</strong>
                        <strong class="p-3 m-1">Count: @Model.ExpenseResponse.TotalCount</strong>
                    </div>
                </div>

            }
            <div class="col-1 d-flex justify-content-end p-0">
                <button class="btn btn-info">Add Expense</button>
                @*<span asp-validation-for="q"></span>*@
            </div>
        </div>
        <input type="hidden" asp-for="@Model.pageNumber" />
        <div class="alert alert-danger col-4 py-0 offset-4" asp-validation-summary="All">
        </div>
    </form>

    @*  style="background-color: red;"*@
    @if (Model.ExpenseResponse != null)
    {
        <div class="row">
            <div class="table-responsive">
                <table class="table table-bordered table-hover table-sm">
                    <thead>
                        <tr class="text-center table-primary">
                            <th width="10%">
                                Purchase Date
                            </th>
                            <th width="10%">
                                Amount
                            </th>
                            <th width="10%">
                                Merchant
                            </th>
                            <th width="35%">
                                Notes
                            </th>
                            <th width="15%">
                                Sub Category
                            </th>
                            <th width="10%">
                                Main Category
                            </th>
                            <th width="10%">
                                Actions
                            </th>
                        </tr>
                    </thead>
                    <tbody>

                        @foreach (var expense in Model.ExpenseResponse.ListItems)
                        {
                            <tr class="text-center">
                                <td>
                                    @expense.Date.Date.ToShortDateString()
                                </td>
                                <td>
                                    @expense.Amount

                                </td>
                                <td>
                                    @expense.Merchant

                                </td>
                                <td>
                                    @expense.Notes
                                </td>
                                <td>
                                    @expense.SubCategory

                                </td>
                                <td>
                                    @expense.MainCategory

                                </td>
                                <td>
                                    @*Model*@
                                    <div class="modal fade" id="deleteModal-@expense.Id">
                                        <div class="modal-dialog" role="document">
                                            <div class="modal-content">
                                                <div class="modal-header text-center">
                                                    <h5 class="modal-title text-center">
                                                        <strong>Are you sure you want to Delete this Expense?</strong>
                                                    </h5>
                                                    <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close">
                                                        <span aria-hidden="true"></span>
                                                    </button>
                                                </div>

                                                <div class="modal-footer d-flex justify-content-evenly">
                                                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">
                                                        Cancel
                                                    </button>
                                                    <form method="post"
                                                  asp-page="./Index"
                                                  asp-page-handler="Delete"
                                                  asp-route-expenseId="@expense.Id"
                                                  asp-route-query="@Model.query"
                                                  asp-route-q="@Model.q"
                                                  asp-route-q2="@Model.q2"
                                                  asp-route-pageNumber="@Model.pageNumber" id="logoutForm">
                                                        <button type="submit" class="btn btn-danger">DELETE</button>
                                                    </form>
                                                </div>
                                            </div>
                                        </div>
                                    </div>

                                    <button style="background: none; padding: 0px; border: none;" type="button" data-bs-toggle="modal"
                                    data-bs-target="#detailModal-@expense.Id" class="px-2">

                                        <i class="bi bi-zoom-in text-primary" role="img"
                                   style="font-size: 1.25rem;"></i>

                                    </button>

                                    <button style="background: none; padding: 0px; border: none;" type="button" data-bs-toggle="modal"
                                    data-bs-target="#editModal-@expense.Id" class="px-2">

                                        <i class="bi bi-pencil text-primary" role="img"
                                   style="font-size: 1.25rem;"></i>
                                    </button>

                                    <button style="background: none; padding: 0px; border: none;" type="button" data-bs-toggle="modal"
                                    data-bs-target="#deleteModal-@expense.Id" class="px-2">

                                        <i class="bi bi-trash text-primary" role="img"
                                   style="font-size: 1.25rem;"></i>

                                    </button>



                                </td>
                            </tr>
                        }
                    </tbody>
                </table>
            </div>
        </div>



        @*Pagination - move to a partial view if posible*@
        <nav class="py-0">
            <ul class="pagination justify-content-end">

                @if (Model.pageNumber == 1)
                {
                    <li class="page-item disabled">
                        <a class="page-link">&laquo;</a>
                    </li>
                    <li class="page-item active">
                        <a class="page-link" asp-page="./Index" asp-route-query="@Model.query" asp-route-q="@Model.q"
                   asp-route-q2="@Model.q2"
                   asp-route-pageNumber="1">1</a>
                    </li>
                }
                else if (Model.pageNumber > 1)
                {
                    var previousPageNumber = Model.pageNumber - 1;
                    <li class="page-item">
                        <a class="page-link" asp-page="./Index" asp-route-query="@Model.query" asp-route-q="@Model.q"
                   asp-route-q2="@Model.q2" asp-route-pageNumber="1">&laquo;</a>
                    </li>
                    <li class="page-item">
                        <a class="page-link" asp-page="./Index" asp-route-query="@Model.query" asp-route-q="@Model.q"
                   asp-route-q2="@Model.q2" asp-route-pageNumber="@previousPageNumber">&lsaquo;</a>
                    </li>
                    <li class="page-item active">
                        <a class="page-link" asp-page="./Index" asp-route-query="@Model.query" asp-route-q="@Model.q"
                   asp-route-q2="@Model.q2" asp-route-pageNumber="@Model.pageNumber">@Model.pageNumber</a>
                    </li>
                }
                @if ((Model.ExpenseResponse.TotalPages - 1) > Model.pageNumber)
                {
                    var calculatedPageNumber = Model.pageNumber + 1;
                    <li class="page-item">
                        <a class="page-link" asp-page="./Index" asp-route-query="@Model.query" asp-route-q="@Model.q"
                   asp-route-q2="@Model.q2"
                   asp-route-pageNumber="@calculatedPageNumber">&rsaquo;</a>
                    </li>
                }
                else if ((Model.ExpenseResponse.TotalPages - 1) == Model.pageNumber)
                {
                    var calculatedPageNumber = Model.pageNumber + 1;
                    <li class="page-item">
                        <a class="page-link" asp-page="./Index" asp-route-query="@Model.query" asp-route-q="@Model.q"
                   asp-route-q2="@Model.q2"
                   asp-route-pageNumber="@calculatedPageNumber">&rsaquo;</a>
                    </li>
                }
                @if (Model.ExpenseResponse.TotalPages != Model.pageNumber)
                {
                    <li class="page-item">
                        <a class="page-link" asp-page="./Index" asp-route-query="@Model.query" asp-route-q="@Model.q"
                   asp-route-q2="@Model.q2"
                   asp-route-pageNumber="@Model.ExpenseResponse.TotalPages">&raquo;</a>
                    </li>
                }
                else if (Model.ExpenseResponse.TotalPages == Model.pageNumber)
                {
                    <li class="page-item disabled">
                        <a class="page-link" asp-page="./Index" asp-route-query="@Model.query" asp-route-q="@Model.q"
                   asp-route-q2="@Model.q2"
                   asp-route-pageNumber="@Model.ExpenseResponse.TotalPages">&raquo;</a>
                    </li>
                }
                else if (Model.ExpenseResponse.TotalPages == 1)
                {
                    <li class="page-item disabled">
                        <a class="page-link" asp-page="./Index" asp-route-query="@Model.query" asp-route-q="@Model.q"
                   asp-route-q2="@Model.q2"
                   asp-route-pageNumber="@Model.ExpenseResponse.TotalPages">&raquo;</a>
                    </li>
                }
            </ul>
        </nav>
    }
</div>
@section Scripts {
<partial name="_ValidationScriptsPartial" />
}
<script src="~/lib/jquery/dist/jquery.min.js" asp-append-version="true"></script>

<script type="text/javascript">
    $(document).ready(() => {

        let q = getQueries()["q"];
        let q2 = getQueries()["q2"];
        $("#qInput").val(q);
        $("#q2Input").val(q2);

        let selectListValue = $("#querySelect").val();
        let inputType = ChangeInputType(selectListValue);
        $("#qInput").prop("type", inputType);

        //change the input type based on selection
        $("#querySelect").change(() => {
            let selectListValue = $("#querySelect").val();
            let inputType = ChangeInputType(selectListValue);
            $("#qInput").prop("type", inputType);
            $("#qInput").val("");

        });
        //change the input attributes based on the dropdown selection
        $("#querySelect").change(() => {
            let selectList = $("#querySelect").val();
            if(selectList === "1"){
                 $("#q2Input").show();
                 $("#qInput").removeClass("w-50");
                 $("#qInput").addClass("w-25");
                 $("#q2Input").addClass("w-25");
            }
            if(selectList !== "1"){
                 $("#qInput").addClass("w-50");
                 $("#q2Input").val("");
                 $("#q2Input").removeClass("w-25");
                 $("#q2Input").hide();
            }
            if(selectList === "5"){
                 $("#qInput").prop('step', "any");
                 $("#qInput").prop('min', "0.00");
            }
            if(selectList !== "5"){
                 $("#qInput").removeAttr('min');
                 $("#qInput").removeAttr('step');
                 $("#qInput").removeAttr('min');
            }
            if(selectList === "4"){
                 $("#qInput").prop('min', "2012");
                 let currentYear = new Date().getFullYear();
                 $("#qInput").prop('max', currentYear);
                 $("#qInput").val(parseInt(new Date().getFullYear()));
            }
            if(selectList !== "4"){
                 $("#qInput").removeAttr('min');
                 $("#qInput").removeAttr('step');
                 $("#qInput").removeAttr('min');
            }

            if(selectList === "9"){
                 $("#qInput").hide();
                 $("#categorySelect").show();
                 $.ajax({
                    url: `/api/maincategory`,
                    method: 'GET'
                 }).then((response) => {
                    $("#categorySelect").empty();
                    for(let category of response.mainCategories)
                    {
                    $("#categorySelect").append(`<option value=${category.id}>${category.name}</option>`);
                    }
                });
                }
            if(selectList !== "9")
            {
                 $("#qInput").show();
                 $("#categorySelect").empty();
                 $("#categorySelect").hide();
            }
            if(selectList === "8"){
                 $("#qInput").hide();
                 $("#categorySelect").show();
                 $.ajax({
                    url: `/api/subcategory/all`,
                    method: 'GET'
                 }).then((response) => {
                    $("#categorySelect").empty();
                    console.log(response);
                    for(let category of response){
                    $("#categorySelect").append(`<option value=${category.id}>${category.name}</option>`);
                    }
                }).catch((error) => alert(error));
                }
            });

        //if it's a query of the amount, make it a nice loking decimal
        $('#qInput').change(() => {
            let selectListValue = $("#querySelect").val();
            if(selectListValue == "5"){
                let amount = $("#qInput").val();
                let rounded = Math.round(amount * 100) / 100;
                let finalNumber = rounded.toFixed(2);
                $("#qInput").val(finalNumber);
            }
        });
    });

    const ChangeInputType = (option) => {
        if(option == ""){ return "date"; }
        let inputType="";
        switch(option){
            case "0":
                inputType = "date";
                break;
            case "1":
                inputType = "date";
                break;
            case "2":
                inputType = "month";
                break;
            case "3":
                inputType = "month";
                break;
            case "4":
                inputType = "number";
                break;
            case "5":
                inputType = "number";
                break;
            case "6":
                inputType = "text";
                break;
            case "7":
                inputType = "text";
                break;
            case "8":
                inputType = "text";
                break;
            case "9":
                inputType = "text";
                break;
            case "10":
                inputType = "text";
                break;
        }
        return inputType;
    }
    //if you want to grab values from query string
    const getQueries = () =>
    {
        let queries = [], hash;
        let values = window.location.href.slice(window.location.href.indexOf('?') + 1).split('&');
        for(let i = 0; i < values.length; i++)
        {
            hash = values[i].split('=');
            queries.push(hash[0]);
            queries[hash[0]] = hash[1];
        }
        return queries;
    }
</script>