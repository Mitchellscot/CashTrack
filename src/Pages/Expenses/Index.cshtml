@page
@using CashTrack.Models.Common
@model CashTrack.Pages.Expenses.Index
@{
    Layout = "_Layout";
}

<div class="container-fluid">
    <form method="get" id="queryForm">

        <div class="row mb-3 justify-content-center">

            <div class="col-6">
                <div class="input-group">
                    <select data-width="100% asp-for="query" asp-items="Html.GetEnumSelectList<QueryOptions>()" class="form-select text-center" id="querySelect" name="query">
                    </select>
                    <input data-val="true" asp-for=@Model.q type="date" class="form-control w-50" id="qInput">
                    <input style="display: none;" data-val="true" asp-for=@Model.q2 type="date" class="form-control" id="q2Input">
                    <button class="btn btn-secondary" type="submit">
                        <i class="bi bi-search text-white" role="img"
                           style="font-size: 1rem;"></i>
                    </button>
                </div>
            </div>
            <div class="col-6">
                <span asp-validation-for="q"></span>
                @if (Model.ExpenseResponse != null)
                {
                    <div>Total Amount: $@Model.ExpenseResponse.TotalAmount</div>
                    <div>Count: @Model.ExpenseResponse.TotalCount</div>
                }

                <button class="btn-sm btn-primary">Add an Expense</button>
            </div>
        </div>
        <div class="alert alert-danger col-4 py-0 offset-4" asp-validation-summary="All">
        </div>
    </form>

    @*  style="background-color: red;"*@
    @if (Model.ExpenseResponse != null)
    {
        <div class="row">
            <div class="table-responsive">
                <table class="table table-bordered table-hover table-sm">
                    <thead>
                        <tr class="text-center">
                            <th width="10%">
                                Purchase Date
                            </th>
                            <th width="10%">
                                Amount
                            </th>
                            <th width="15%">
                                Merchant
                            </th>
                            <th width="10%">
                                Sub Category
                            </th>
                            <th width="10%">
                                Main Category
                            </th>
                            <th width="15%">
                                Tags
                            </th>
                            <th width="20%">
                                Actions
                            </th>
                        </tr>
                    </thead>
                    <tbody>

                        @foreach (var expense in Model.ExpenseResponse.ListItems)
                        {
                            <tr class="text-center">
                                <td>
                                    @expense.Date.Date.ToShortDateString()
                                </td>
                                <td>
                                    @expense.Amount

                                </td>
                                <td>
                                    @expense.Merchant

                                </td>
                                <td>
                                    @expense.SubCategory

                                </td>
                                <td>
                                    @expense.MainCategory

                                </td>
                                <td>
                                    @foreach (var tag in expense.Tags)
                                    {
                                        <span>tag.TagName</span>

                                    }
                                </td>
                            </tr>
                        }

                    </tbody>
                </table>
            </div>
        </div>
        <nav>
            <ul class="pagination justify-content-end">
                <li class="page-item disabled">
                    <a class="page-link">Previous</a>
                </li>
                @Model.ExpenseResponse.
                <li class="page-item"><a class="page-link" href="#">@Model.ExpenseResponse.PageNumber == 1 ?                        @Model.ExpenseResponse.PageNumber : Model.ExpenseResponse.PageNumber -1 </a></li>
                <li class="page-item"><a class="page-link" href="#">@Model.ExpenseResponse.PageNumber</a></li>
                <li class="page-item"><a class="page-link" href="#">3</a></li>
                <li class="page-item">
                    <a class="page-link" href="#">Next</a>
                </li>
            </ul>
        </nav>
    }
</div>
@section Scripts {
<partial name="_ValidationScriptsPartial" />
}
<script src="~/lib/jquery/dist/jquery.min.js" asp-append-version="true"></script>

<script type="text/javascript">
    $(document).ready(function () {
        //change the input attributes based on the dropdown selection
        $("#querySelect").change(() => {
            let selectList = $("#querySelect").val();
            if(selectList === "1"){
                 $("#q2Input").show();
                 $("#qInput").removeClass("w-50");
                 $("#qInput").addClass("w-25");
                 $("#q2Input").addClass("w-25");
            }
            if(selectList !== "1"){
                 $("#qInput").addClass("w-50");
                 $("#q2Input").val("");
                 $("#q2Input").removeClass("w-25");
                 $("#q2Input").hide();
            }
            if(selectList === "9"){
                 $("#qInput").prop('min', "1");
                 $("#qInput").prop('step', "any");
                 $("#qInput").prop('min', "0.00");
            }
            else if(selectList !== "9"){
                 $("#qInput").removeAttr('min');
                 $("#qInput").removeAttr('step');
                 $("#qInput").removeAttr('min');
            }
        });
        //change the input type based on selection
        $("#querySelect").change(() => {
            let selectListValue = $("#querySelect").val();
            let inputType = ChangeInputType(selectListValue);
            $("#qInput").prop("type", inputType);
            $("#qInput").val("");

        });
        //if it's a query of the amount, make it a nice loking decimal
        $('#qInput').change(() => {
            let selectListValue = $("#querySelect").val();
            if(selectListValue == "9"){
                let amount = $("#qInput").val();
                let rounded = Math.round(amount * 100) / 100;
                let finalNumber = rounded.toFixed(2);
                $("#qInput").val(finalNumber);
            }
        });
    });

    const ChangeInputType = (option) => {
        if(option == ""){ return "date"; }
        let inputType="";
        switch(option){
            case "0":
                inputType = "date";
                break;
            case "1":
                inputType = "date";
                break;
            case "2":
                inputType = "date";
                break;
            case "3":
                inputType = "date";
                break;
            case "4":
                inputType = "date";
                break;
            case "5":
                inputType = "date";
                break;
            case "6":
                inputType = "date";
                break;
            case "7":
                inputType = "date";
                break;
            case "8":
                inputType = "date";
                break;
            case "9":
                inputType = "number";
                break;
            case "10":
                inputType = "text";
                break;
            case "11":
                inputType = "text";
                break;
            case "12":
                inputType = "text";
                break;
            case "13":
                inputType = "text";
                break;
            case "14":
                inputType = "text";
                break;
        }
        return inputType;
    }
</script>