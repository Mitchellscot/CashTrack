@page
@using CashTrack.Models.Common
@using CashTrack.Pages.Shared
@model CashTrack.Pages.Expenses.Index
@{
    Layout = "_Layout";
}

<div class="container-fluid">

    <div class="row">
        <div class="col-xl-6 col-12 mb-1 mr-auto">
            <form method="get">
                <div class="input-group">
                    <div class="input-group-prepend d-none d-sm-block">
                        <div class="input-group-text">Search</div>
                    </div>
                    <select data-width="100%" asp-items="Model.queryOptions" class="form-select text-center" id="querySelect" asp-for="query">
                    </select>
                    <select style="display: none;" data-width="100%" class="form-select text-center" id="categorySelect" asp-for="@Model.q">
                    </select>
                    <input data-val="true" asp-for=@Model.q type="@Model.inputType" class="form-control w-50 text-center" id="qInput">
                    <input style="display: none;" data-val="true" asp-for=@Model.q2 type="date" class="form-control" id="q2Input">
                    <button class="btn btn-secondary" type="submit" asp-route-pageNumber="1">
                        <i class="bi bi-search text-white mx-3" role="img"
                           style="font-size: 1rem;"></i>
                    </button>
                    <input type="hidden" asp-for="@Model.pageNumber" value="1" />

                </div>
            </form>
        </div>
        <div class="col-xl-4 col-6 px-xl-0 d-none d-sm-block">
            <div class="btn-group" role="group">
                <div class="input-group-prepend d-none d-md-block">
                    <div class="input-group-text">Current</div>
                </div>
                <a asp-page="./Index" asp-route-query="11" asp-route-pageNumber="@Model.pageNumber" type="button" class="btn btn-secondary">Month</a>
                <a asp-page="./Index" asp-route-query="12" asp-route-pageNumber="@Model.pageNumber" type="button" class="btn btn-secondary">Quarter</a>
                <a asp-page="./Index" asp-route-query="13" asp-route-pageNumber="@Model.pageNumber" type="button" class="btn btn-secondary">Year</a>
                <a asp-page="./Index" asp-route-query="14" asp-route-pageNumber="@Model.pageNumber" type="button" class="btn btn-secondary" style="height: 38px; overflow: hidden;">30 Days</a>
            </div>
        </div>
        <div class="col-4 col-xl-1 d-xl-none d-flex justify-content-end">
            @if (Model.Message != null)
            {
                <div class="col-xl-2 text-center border rounded my-0 py-0 alert alert-success align-self-center">@Model.Message</div>
            }
            <div asp-validation-summary="All"></div>
        </div>
        <div class="col-xl-2 col-2 d-flex justify-content-end">
            <button class="btn btn-primary text-wrap" style="height: 38px;" data-bs-toggle="modal" data-bs-target="#addExpenseModal">Add Expense</button>
        </div>
    </div>
    @* Add Expense Modal *@
    <div class="modal fade" id="addExpenseModal">
        <div class="modal-dialog modal-xl">
            <div class="modal-content">
                <div class="modal-header text-center">
                    <div></div>
                    <h5 class="modal-title w-100">Add an Expense</h5>
                    <button type="button" class="btn-close" data-bs-dismiss="modal">
                    </button>
                </div>
                <div class="modal-body">
                    <div class="container-fluid">
                        <form>
                            <div class="col">
                                @*start here*@
                            </div>
                        </form>
                    </div>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Close</button>
                    <button type="button" class="btn btn-primary">Save changes</button>

                </div>
            </div>
        </div>
    </div>

    @if (Model.ExpenseResponse != null && Model.ExpenseResponse.TotalCount > 0)
    {
        <div class="row">
            <div class="table-responsive">
                <table class="table table-bordered table-hover table-sm mb-0">
                    <thead>
                        <tr class="text-center table-primary">
                            <th width="10%">
                                Date
                            </th>
                            <th width="10%">
                                Amount
                            </th>
                            <th width="10%">
                                Merchant
                            </th>
                            <th width="10%">
                                Category
                            </th>
                            <th width="10%">
                                Main
                            </th>
                            <th width="10%">
                                Actions
                            </th>
                        </tr>
                    </thead>

                    <tbody>
                        @foreach (var expense in Model.ExpenseResponse.ListItems)
                        {
                            <tr class="text-center">
                                <td>
                                    @expense.Date.Date.ToShortDateString()
                                </td>
                                <td>
                                    @expense.Amount

                                </td>
                                <td>
                                    @expense.Merchant

                                </td>
                                <td>
                                    @expense.SubCategory

                                </td>
                                <td>
                                    @expense.MainCategory

                                </td>
                                <td>
                                    @*Delete Model*@
                                    <div class="modal fade" id="deleteModal-@expense.Id">
                                        <div class="modal-dialog" role="document">
                                            <div class="modal-content">
                                                <div class="modal-header text-center">
                                                    <h5 class="modal-title text-center">
                                                        <strong>Are you sure you want to Delete this Expense?</strong>
                                                    </h5>
                                                    <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close">
                                                        <span aria-hidden="true"></span>
                                                    </button>
                                                </div>

                                                <div class="modal-footer d-flex justify-content-evenly">
                                                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">
                                                        Cancel
                                                    </button>
                                                    <form method="post"
                                                  asp-page="./Index"
                                                  asp-page-handler="Delete"
                                                  asp-route-expenseId="@expense.Id"
                                                  asp-route-query="@Model.query"
                                                  asp-route-q="@Model.q"
                                                  asp-route-q2="@Model.q2"
                                                  asp-route-pageNumber="@Model.pageNumber" id="logoutForm">
                                                        <button type="submit" class="btn btn-danger">DELETE</button>
                                                    </form>
                                                </div>
                                            </div>
                                        </div>
                                    </div>

                                    <button style="background: none; padding: 0px; border: none;" type="button" data-bs-toggle="modal"
                                    data-bs-target="#detailModal-@expense.Id" class="px-2">

                                        <i class="bi bi-zoom-in text-primary" role="img"
                                   style="font-size: 1.25rem;"></i>

                                    </button>

                                    <button style="background: none; padding: 0px; border: none;" type="button" data-bs-toggle="modal"
                                    data-bs-target="#editModal-@expense.Id" class="px-2">

                                        <i class="bi bi-pencil text-primary" role="img"
                                   style="font-size: 1.25rem;"></i>

                                    </button>

                                    <button style="background: none; padding: 0px; border: none;" type="button" data-bs-toggle="modal"
                                    data-bs-target="#deleteModal-@expense.Id" class="px-2">

                                        <i class="bi bi-trash text-primary" role="img"
                                   style="font-size: 1.25rem;"></i>

                                    </button>
                                </td>
                            </tr>
                        }
                    </tbody>
                </table>
                <div class="row my-1">
                    <div class="col-sm-6 col-lg-2 col-xl-2 m-auto">
                        @if (@Model.ExpenseResponse.TotalCount > 0)
                        {
                            var currentCount = Model.ExpenseResponse.PageNumber * @Model.ExpenseResponse.PageSize;
                            <span class="text-muted">@(Math.Min(currentCount, Model.ExpenseResponse.TotalCount)) of @Model.ExpenseResponse.TotalCount</span>
                        }
                    </div>
                    <div class="col-sm-6 col-lg-4 col-xl-6 m-auto">
                        @if (Model.Message != null)
                        {
                            <div class="alert alert-dismissible alert-success d-none d-xl-block text-center p-2">
                                <button type="button" class="btn-close" data-bs-dismiss="alert"></button>
                                <h4 class="p-0 text-white">@Model.Message</h4>
                            </div>
                        }
                        @if (@Model.ExpenseResponse.TotalAmount > 0 && Model.Message == null)
                        {
                            <div class="text-center">
                                <strong class="p-0 text-success">Total: $ @Model.ExpenseResponse.TotalAmount</strong>
                            </div>
                        }
                    </div>
                    <div class="col-sm-12 col-lg-6 col-xl-4 my-0 py-0 gy-0">
                        @await Html.PartialAsync("_PaginationPartial",
                    new _PaginationPartialModel {
                    PathLink = "../Expenses/Index",
                    IsExpensePage = true,
                    PageNumber = Model.ExpenseResponse.PageNumber,
                    TotalPages = Model.ExpenseResponse.TotalPages,
                    Query = Model.query,
                    q = Model.q,
                    q2 = Model.q2
                    })
                    </div>
                </div>
            </div>
        </div>
    }
    else
    {
        <div class="alert alert-dismissible alert-info mt-5 offset-4 w-25 text-center">
            <button type="button" class="btn-close" data-bs-dismiss="alert"></button>
            <h3>No Expenses Found!</h3> Please try again.
        </div>
    }
</div>

@section Scripts {
<partial name="_ValidationScriptsPartial" />
<script src="https://code.jquery.com/jquery-3.6.0.js" asp-append-version="true"></script>
<script src="https://code.jquery.com/ui/1.13.1/jquery-ui.js" asp-append-version="true"></script>
<script type="text/javascript">
        const getQueries = () => {
        let queries = [], hash;
        let values = window.location.href.slice(window.location.href.indexOf('?') + 1).split('&');
        for (let i = 0; i < values.length; i++) {
            hash = values[i].split('=');
            queries.push(hash[0]);
            queries[hash[0]] = hash[1];
        }
        return queries;
    }
    $(document).ready(() => {
        let q = getQueries()["q"];
        let q2 = getQueries()["q2"];
        $("#qInput").val(q);
        $("#q2Input").val(q2);

        //When the query selection option changes
        $("#querySelect").change(() => {
            let selectListValue = $("#querySelect").val();
            handleQuerySelectChange(selectListValue);
        });

        function handleQuerySelectChange(selectListValue) {
            switch (selectListValue) {
                //date
                case "0":
                    resetCategorySelect();
                    resetNumbersForm();
                    resetSecondInputForm();
                    $("#qInput").prop("type", "date");
                    break;
                //date range
                case "1":
                    resetCategorySelect();
                    resetNumbersForm();
                    $("#qInput").prop("type", "date");
                    $("#q2Input").show();
                    $("#qInput").removeClass("w-50");
                    $("#qInput").addClass("w-25");
                    $("#q2Input").addClass("w-25");
                    break;
                //month
                case "2":
                    resetCategorySelect();
                    resetNumbersForm();
                    resetSecondInputForm();
                    $("#qInput").prop("type", "month");
                    break;
                //quarter
                case "3":
                    resetCategorySelect();
                    resetNumbersForm();
                    resetSecondInputForm();
                    $("#qInput").prop("type", "month");
                    break;
                //year
                case "4":
                    resetCategorySelect();
                    resetSecondInputForm();
                    $("#qInput").prop("type", "number");
                    $("#qInput").prop('min', "2012");
                    let currentYear = new Date().getFullYear();
                    $("#qInput").prop('max', currentYear);
                    $("#qInput").val(parseInt(new Date().getFullYear()));
                    break;
                //amount
                case "5":
                    resetCategorySelect();
                    resetSecondInputForm();
                    $("#qInput").val('');
                    $("#qInput").prop("type", "number");
                    $("#qInput").prop('step', "any");
                    $("#qInput").prop('min', "0.00");
                    break;
                //notes
                case "6":
                    resetCategorySelect();
                    resetNumbersForm();
                    resetSecondInputForm();
                    $("#qInput").prop("type", "text");
                    break;
                //merchant
                case "7":
                    resetCategorySelect();
                    resetNumbersForm();
                    resetSecondInputForm();
                    $("#qInput").prop("type", "text");
                    break;
                //sub category
                case "8":
                    resetNumbersForm();
                    resetSecondInputForm();
                    $("#qInput").hide();
                    $("#categorySelect").show();
                    $.ajax({
                        url: `/api/subcategory/all`,
                        method: 'GET'
                    }).then((response) => {
                        $("#categorySelect").empty();
                        for (let category of response) {
                            $("#categorySelect").append(`<option value=${category.id}>${category.name}</option>`);
                        }
                    })
                    break;
                //main category
                case "9":
                    resetNumbersForm();
                    resetSecondInputForm();
                    $("#qInput").hide();
                    $("#categorySelect").show();
                    $.ajax({
                        url: `/api/maincategory`,
                        method: 'GET'
                    }).then((response) => {
                        $("#categorySelect").empty();
                        for (let category of response.mainCategories) {
                            $("#categorySelect").append(`<option value=${category.id}>${category.name}</option>`);
                        }
                    }).catch((error) => alert(error));
                    break;
                //tags
                case "10":
                    resetCategorySelect();
                    resetNumbersForm();
                    resetSecondInputForm();
                    $("#qInput").prop("type", "text");
                    break;
                default:
                    resetSecondInputForm();
                    resetNumbersForm();
                    resetCategorySelect();
                    $("#qInput").prop("type", "date");
                    break;
            }
        }

        const resetSecondInputForm = () => {
            $("#qInput").addClass("w-50");
            $("#q2Input").val("");
            $("#q2Input").removeClass("w-25");
            $("#q2Input").hide();
        }
        const resetNumbersForm = () => {
            $("#qInput").removeAttr('min');
            $("#qInput").removeAttr('step');
            $("#qInput").removeAttr('min');
            $("#qInput").val('');
        }
        const resetCategorySelect = () => {
            $("#qInput").show();
            $("#categorySelect").empty();
            $("#categorySelect").hide();
        }

        //if it's a query of the amount, make it a nice loking decimal
        $('#qInput').change(() => {
            let selectListValue = $("#querySelect").val();
            if (selectListValue == "5") {
                let amount = $("#qInput").val();
                let rounded = Math.round(amount * 100) / 100;
                let finalNumber = rounded.toFixed(2);
                $("#qInput").val(finalNumber);
            }
        });

        //if it's a query of the merchants, show a dropdown list of matching merchant names
        $("#qInput").on("input", () => {
            let selectListValue = $("#querySelect").val();
            if (selectListValue === "7") {
                let searchTerm = $("#qInput").val();
                let matchingResults;
                $.ajax({
                    url: `/api/merchants/match?merchantName=${searchTerm}`,
                    method: 'GET'
                }).then((response) => {
                    console.log(response);
                    $("#qInput").empty();
                    $("#qInput").autocomplete({ source: response });
                });
            }
        });

        //if you want to grab values from query string
    });
</script>
    }
