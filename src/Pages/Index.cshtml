@page
@using System.Globalization;
@using CashTrack.Pages.Budget;
@using Pages.Shared;
@using System.Text.Json;
@model IndexModel
@{
    ViewData["Title"] = "Dashboard";
    Layout = "_Layout";
    var currentMonth = Model.Month == DateTime.Now.Month && Model.Year == DateTime.Now.Year;
    var realizedIncomePercentage = $"{@Model.SummaryResponse.MonthlyProgress.RealizedIncome}%";
    var budgetedExpensesPercentage = $"{@Model.SummaryResponse.MonthlyProgress.BudgetedExpenses}%";
    var budgetedSavingsPercentage = $"{@Model.SummaryResponse.MonthlyProgress.BudgetedSavings}%";
    var discretionarySpending = $"{@Model.SummaryResponse.MonthlyProgress.DiscretionarySpendingPercent}%";
}
<div class="container-fluid">
    @if (Model.ReviewAmount > 0)
    {
        <div class="alert alert-danger">You have @Model.ReviewAmount transactions to review. <a asp-page="./Import/Expenses">Review them here</a></div>
    }
    <div class="container-fluid">
        <div class="row mt-2 border-bottom d-flex justify-content-between">
            <div class="d-flex col-auto align-self-center">
                <h3 class="me-2">
                    @CultureInfo.CurrentCulture.DateTimeFormat.GetMonthName(Model.Month) @Model.Year
                </h3>
                <a class="align-self-center" asp-page="./Annual">Annual</a>
            </div>
            <div class="col-auto d-flex">
                <form method="get" class="d-flex btn-height">
                    <div class="input-group me-2">

                        <select onchange="this.form.submit()" style="min-width: 135px;" data-val="true" asp-for=@Model.Month asp-items="@Model.MonthList" class="form-select text-center" id="monthlyBudgetMonthSelection">
                            <option value="@Model.Month" selected disabled hidden></option>
                        </select>

                        <select onchange="this.form.submit()" data-val="true" asp-for=@Model.Year asp-items="@Model.YearSelectList" class="form-select text-center" id="monthlyBudgetYearSelection">
                            <option value="@Model.Year" selected disabled hidden></option>
                        </select>

                    </div>
                </form>
                <div class="d-flex justify-content-end">
                    <button class="btn btn-secondary btn-height me-2 btn-text-overflow" type="button">View Details</button>
                    <button class="btn btn-primary dropdown-toggle btn-height" type="button" data-bs-toggle="dropdown">Add</button>
                    <ul class="dropdown-menu">
                        <li class="dropdown-item">Expense</li>
                        <li class="dropdown-item">Income</li>
                        <li class="dropdown-divider"></li>
                        <li class="dropdown-item">Merchant</li>
                        <li class="dropdown-item">Income Source</li>
                        <li class="dropdown-divider"></li>
                        <li class="dropdown-item">Income Category</li>
                        <li class="dropdown-item">Sub Category</li>
                        <li class="dropdown-item">Main Category</li>
                    </ul>
                </div>
            </div>
        </div>
        <div class="row mb-1">
            @if (Model.SummaryResponse.MonthlySummary != null)
            {
                <div class="col">
                    <canvas id="monthlySummaryChart" class="chart-height"></canvas>
                </div>
            }
        </div>
        <div class="row d-flex">
            @if (Model.SummaryResponse.MonthlySummary != null)
            {
                <div class="col-6 col-lg-3 shadow-sm">
                    <ul class="list-group text-center mt-2">
                        <li class="list-group-item d-flex justify-content-between p-3">
                            <span class="d-none d-md-block">
                                Income: &nbsp;
                            </span>
                            <span class="fw-bold text-primary responsive-text">
                                @String.Format("{0:n}", Model.SummaryResponse.MonthlySummary.RealizedIncome) /
                                @Model.SummaryResponse.MonthlySummary.BudgetedIncome
                            </span>
                        </li>
                        <li class="list-group-item d-flex justify-content-between p-3">
                            <span class="d-none d-md-block">
                                Expenses:
                            </span>
                            <span class="fw-bold text-primary responsive-text">
                                @String.Format("{0:n}", Model.SummaryResponse.MonthlySummary.RealizedExpenses) /
                                @Model.SummaryResponse.MonthlySummary.BudgetedExpenses
                            </span>
                        </li>
                        <li class="list-group-item d-flex justify-content-between p-3">
                            <span class="d-none d-md-block">
                                Savings:
                            </span>
                            <span class="fw-bold text-primary responsive-text">
                                @String.Format("{0:n}", Model.SummaryResponse.MonthlySummary.RealizedSavings) /      @Model.SummaryResponse.MonthlySummary.BudgetedSavings
                            </span>
                        </li>
                        <li class="list-group-item d-flex justify-content-between p-3">
                            @if (currentMonth)
                            {
                                <span class="d-none d-md-block">
                                    Estimated Savings:
                                </span>
                            }
                            else
                            {
                                <span class="d-none d-md-block">
                                    Actual Savings:
                                </span>
                            }
                            <span class="fw-bold text-primary responsive-text">
                                @String.Format("{0:n}", Model.SummaryResponse.MonthlySummary.EstimatedSavings)
                            </span>
                        </li>
                        <li class="list-group-item d-flex justify-content-between p-3">
                            <span class="d-none d-md-block">
                                Unspent:
                            </span>
                            <span class="fw-bold text-primary responsive-text">
                                @String.Format("{0:n}", Model.SummaryResponse.MonthlySummary.Unspent)
                            </span>
                        </li>
                        <li class="list-group-item d-flex justify-content-between p-3">
                            <span class="d-none d-md-block">
                                Budget Variance:
                            </span>
                            <span class="fw-bold text-primary responsive-text">
                                @Model.SummaryResponse.MonthlySummary.BudgetVariance.ToString("P", CultureInfo.InvariantCulture)
                            </span>
                        </li>
                    </ul>
                </div>
            }
            @if (Model.SummaryResponse.OverallSummaryChart != null)
            {
                <div class="col-6 col-lg-3 chart-height shadow-sm">
                    <canvas id="overallSummaryChart"></canvas>
                </div>
            }
            <div class="col-12 col-lg-6 border rounded-2 mt-2 shadow">
                <div class="d-flex">
                    <h4 class="mt-1 me-2">Budgeted Income</h4><i class="bi bi-question-circle text-primary action-icon align-self-center"></i>
                </div>
                <div class="progress border-bottom my-2">
                    <div class="progress-bar bg-success" style="width: @realizedIncomePercentage">@realizedIncomePercentage</div>
                </div>
                <div class="d-flex">
                    <h4 class="me-2">Budgeted Expenses</h4><i class="bi bi-question-circle text-primary action-icon align-self-center"></i>
                </div>
                <div class="progress my-2">
                    <div class="progress-bar bg-danger" style="width: @budgetedExpensesPercentage">@budgetedExpensesPercentage</div>
                </div>
                <div class="d-flex">
                    <h4 class="me-2">Budgeted Savings</h4><i class="bi bi-question-circle text-primary action-icon align-self-center"></i>
                </div>
                <div class="progress my-2">
                    <div class="progress-bar bg-info" style="width: @budgetedSavingsPercentage">@budgetedSavingsPercentage</div>
                </div>
                <div class="d-flex">
                    <h4 class="me-2">Discretionary Spending</h4><i class="bi bi-question-circle text-primary action-icon align-self-center"></i>
                </div>
                <div class="progress my-2">
                    <div class="progress-bar bg-warning" style="width: @discretionarySpending">@Model.SummaryResponse.MonthlyProgress.DiscretionarySpendingAmount</div>
                </div>
                <div class="d-flex">
                    <h4 class="me-2">Annual Savings Goal</h4><i class="bi bi-question-circle text-primary action-icon align-self-center"></i>
                </div>
                <div class="progress my-2">
                    <div class="progress-bar" style="width: 25%">25%</div>
                </div>
                <p>In order to hit your annual savings goal, try to saving 1,320 this month.</p>
            </div>
        </div>
        <div class="row">
            @if (Model.SummaryResponse.SubCategoryPercentages != null && Model.SummaryResponse.SubCategoryPercentages.Values.Sum() > 0)
            {
                <div class="col-6 col-lg-3 mt-3">
                    <canvas id="subCategoryPie" class="chart-height"></canvas>
                </div>
            }
            @if (Model.SummaryResponse.MainCategoryPercentages != null && Model.SummaryResponse.MainCategoryPercentages.Values.Sum() > 0)
            {
                <div class="col-6 col-lg-3 mt-3">
                    <canvas id="mainCategoryPie" class="chart-height"></canvas>
                </div>
            }
        </div>
    </div>
</div>

@section Scripts {
    <script src="~/js/home.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/chart.js@3.7.1/dist/chart.min.js" asp-append-version="true"></script>
    @await Html.PartialAsync("MonthlyExpenseSummaryChart", new MonthlyExpenseSummaryChart()
    {
        ElementId = "monthlySummaryChart",
        Title = @CultureInfo.CurrentCulture.DateTimeFormat.GetMonthName(Model.Month),
        Labels = JsonSerializer.Serialize(Model.SummaryResponse.ExpenseSummaryChart.Labels),
        BudgetedExpenseDatasets = Model.SummaryResponse.ExpenseSummaryChart.BudgetedExpenses,
        RealizedExpenseDatasets = Model.SummaryResponse.ExpenseSummaryChart.RealizedExpenses

    })
    @await Html.PartialAsync("OverallMonthlySummaryChart", new OverallMonthlySummaryChart()
    {
        ElementId = "overallSummaryChart",
        Title = @CultureInfo.CurrentCulture.DateTimeFormat.GetMonthName(Model.Month),
        Labels = JsonSerializer.Serialize(Model.SummaryResponse.OverallSummaryChart.Labels),
        BudgetedIncome = JsonSerializer.Serialize(Model.SummaryResponse.OverallSummaryChart.BudgetedIncome),
        RealizedIncome = JsonSerializer.Serialize(Model.SummaryResponse.OverallSummaryChart.RealizedIncome),
        BudgetedExpenses = JsonSerializer.Serialize(Model.SummaryResponse.OverallSummaryChart.BudgetedExpenses),
        RealizedExpenses = JsonSerializer.Serialize(Model.SummaryResponse.OverallSummaryChart.RealizedExpenses),
        BudgetedSavings = JsonSerializer.Serialize(Model.SummaryResponse.OverallSummaryChart.BudgetedSavings),
        RealizedSavings = JsonSerializer.Serialize(Model.SummaryResponse.OverallSummaryChart.RealizedSavings)
    })
    @await Html.PartialAsync("CategoryPieChart", new CategoryPieChart(JsonSerializer.Serialize(Model.SummaryResponse.SubCategoryPercentages.Select(x => x.Key).ToArray()))
    {
        ElementId = "subCategoryPie",
        Dataset = JsonSerializer.Serialize(Model.SummaryResponse.SubCategoryPercentages.Select(x => x.Value).ToArray()),
        Title = "Sub Category Percentages",
        IsSummaryChart = true
    })
    @await Html.PartialAsync("CategoryPieChart", new CategoryPieChart(JsonSerializer.Serialize(Model.SummaryResponse.MainCategoryPercentages.Select(x => x.Key).ToArray()))
    {
        ElementId = "mainCategoryPie",
        Dataset = JsonSerializer.Serialize(Model.SummaryResponse.MainCategoryPercentages.Select(x => x.Value).ToArray()),
        Title = "Main Category Percentages",
        IsSummaryChart = true
    })
}