@page
@using System.Globalization;
@using Pages.Shared;
@using System.Text.Json;
@model IndexModel
@{
    ViewData["Title"] = "Dashboard";
    Layout = "_Layout";
    var currentMonth = Model.Month == DateTime.Now.Month && Model.Year == DateTime.Now.Year;
}
<div class="container-fluid">
    @if (Model.ReviewAmount > 0)
    {
        <div class="alert alert-danger">You have @Model.ReviewAmount transactions to review. <a asp-page="./Import/Expenses">Review them here</a></div>
    }
    <div class="container-fluid">
        <div class="row mt-2 border-bottom d-flex justify-content-between">
            <div class="d-flex col-auto align-self-center">
                <h3 class="me-2">@CultureInfo.CurrentCulture.DateTimeFormat.GetMonthName(Model.Month) @Model.Year
                </h3>
                <a class="align-self-center" asp-page="./Annual">Annual</a>
            </div>
            <div class="col-auto d-flex">
                <form method="get" class="d-flex btn-height">
                    <div class="input-group me-2">

                        <select onchange="this.form.submit()" style="min-width: 135px;" data-val="true" asp-for=@Model.Month asp-items="@Model.MonthList" class="form-select text-center" id="monthlyBudgetMonthSelection">
                            <option value="@Model.Month" selected disabled hidden></option>
                        </select>

                        <select onchange="this.form.submit()" data-val="true" asp-for=@Model.Year asp-items="@Model.YearSelectList" class="form-select text-center" id="monthlyBudgetYearSelection">
                            <option value="@Model.Year" selected disabled hidden></option>
                        </select>

                    </div>
                </form>
                <div class="d-flex justify-content-end">
                    <button class="btn btn-secondary btn-height me-2 btn-text-overflow" type="button">View Details</button>
                    <button class="btn btn-primary dropdown-toggle btn-height" type="button" data-bs-toggle="dropdown">Add</button>
                    <ul class="dropdown-menu">
                        <li class="dropdown-item">Expense</li>
                        <li class="dropdown-item">Income</li>
                        <li class="dropdown-divider"></li>
                        <li class="dropdown-item">Merchant</li>
                        <li class="dropdown-item">Income Source</li>
                        <li class="dropdown-divider"></li>
                        <li class="dropdown-item">Income Category</li>
                        <li class="dropdown-item">Sub Category</li>
                        <li class="dropdown-item">Main Category</li>
                    </ul>
                </div>
            </div>
        </div>
        <div class="row mb-1">
            @if (Model.SummaryResponse.MonthlySummary != null)
            {
                <div class="col">
                    <canvas id="monthlySummaryChart" class="chart-height"></canvas>
                </div>
            }
        </div>
    <div class="row">
            @if (Model.SummaryResponse.MonthlySummary != null)
            {
                <div class="col-6 col-lg-3">
                    <ul class="list-group text-center mt-3">
                        <li class="list-group-item d-flex justify-content-between p-3">
                            <span class="d-none d-md-block">
                                Income: &nbsp;
                            </span>
                            <span class="fw-bold text-primary responsive-text">
                                @String.Format("{0:n}", Model.SummaryResponse.MonthlySummary.RealizedIncome) / 
                                @Model.SummaryResponse.MonthlySummary.BudgetedIncome
                            </span>
                        </li>
                        <li class="list-group-item d-flex justify-content-between p-3">
                            <span class="d-none d-md-block">
                                Expenses:
                            </span>
                            <span class="fw-bold text-primary responsive-text">
                                @String.Format("{0:n}", Model.SummaryResponse.MonthlySummary.RealizedExpenses) /
                                @Model.SummaryResponse.MonthlySummary.BudgetedExpenses
                            </span>
                        </li>
                        <li class="list-group-item d-flex justify-content-between p-3">
                            <span class="d-none d-md-block">
                                Savings:
                            </span>
                            <span class="fw-bold text-primary responsive-text">
                                @String.Format("{0:n}", Model.SummaryResponse.MonthlySummary.RealizedSavings) /      @Model.SummaryResponse.MonthlySummary.BudgetedSavings
                            </span>
                        </li>
                        <li class="list-group-item d-flex justify-content-between p-3">
                            @if (currentMonth)
                            {
                                <span class="d-none d-md-block">
                                Estimated Savings:
                                </span>
                            }
                            else
                            {
                                <span class="d-none d-md-block">
                                Actual Savings:
                                </span>
                            }
                            <span class="fw-bold text-primary responsive-text">
                                @String.Format("{0:n}", Model.SummaryResponse.MonthlySummary.EstimatedSavings)
                            </span>
                        </li>
                        <li class="list-group-item d-flex justify-content-between p-3">
                            <span class="d-none d-md-block">
                                Unspent:
                            </span>
                            <span class="fw-bold text-primary responsive-text">
                                @String.Format("{0:n}", Model.SummaryResponse.MonthlySummary.Unspent)
                            </span>
                        </li>
                    </ul>
                </div>
            }
    </div>
    </div>
</div>

@section Scripts {
    <script src="~/js/home.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/chart.js@3.7.1/dist/chart.min.js" asp-append-version="true"></script>
    @await Html.PartialAsync("MonthlySummaryChart", new MonthlySummaryChart()
    {
        ElementId = "monthlySummaryChart",
        Title = @CultureInfo.CurrentCulture.DateTimeFormat.GetMonthName(Model.Month),
        BudgetedIncomeDataset = JsonSerializer.Serialize(Model.SummaryResponse.SummaryChartData.BudgetedIncomeData),
        RealizedIncomeDataset = JsonSerializer.Serialize(Model.SummaryResponse.SummaryChartData.RealizedIncomeData),
        BudgetedSavingsDataset = JsonSerializer.Serialize(Model.SummaryResponse.SummaryChartData.BudgetedSavingsData),
        RealizedSavingsDataset = JsonSerializer.Serialize(Model.SummaryResponse.SummaryChartData.RealizedSavingsData),
        Labels = JsonSerializer.Serialize(Model.SummaryResponse.SummaryChartData.Labels),
        BudgetedExpenseDatasets = Model.SummaryResponse.SummaryChartData.BudgetedExpenses,
        RealizedExpenseDatasets = Model.SummaryResponse.SummaryChartData.RealizedExpenses

    })
}