@using CashTrack.Common;
@model CashTrack.Pages.Shared.MonthlyStatisticsChart
@{
    var titleExists = string.IsNullOrEmpty(Model.Title) ? false : true;
}

    <script>
        const @Model.VariableName = document.getElementById(@Json.Serialize(@Model.ElementId)).getContext('2d');
        const @Model.ElementId = new Chart(@Model.VariableName, {
            type: 'line',
            data: {
                labels: @Html.Raw(@Model.Labels),
                datasets: [{
                    label: 'Count',
                    data: @Model.CountDataset,
                    yAxisID: 'y',
                    order: 4,
                    color: 'rgba(0, 0, 0, 0)',
                    backgroundColor: '@Html.Raw(Model.CountColor)',
                    borderColor: '@Html.Raw(Model.CountColor)',
                    borderWidth: 2
                }, {
                    label: 'Average',
                    data: @Model.AverageDataset,
                    borderDash: [5, 5],
                    yAxisID: 'y',
                    order: 3,
                    color: 'rgba(0, 0, 0, 0)',
                    backgroundColor: '@Html.Raw(Model.AverageColor)',
                    borderColor:'@Html.Raw(Model.AverageColor)',
                    borderWidth: 2
                }, {
                    label: 'Min',
                    data: @Model.MinDataset,
                    yAxisID: 'y',
                    order: 2,
                    color: 'rgba(0, 0, 0, 0)',
                    backgroundColor: '@Html.Raw(Model.MinColor)',
                    borderColor: '@Html.Raw(Model.MinColor)',
                    borderWidth: 2
                }, {
                    label: 'Max',
                    data: @Model.MaxDataset,
                    yAxisID: 'y1',
                    order: 1,
                    color: 'rgba(0, 0, 0, 0)',
                    backgroundColor: '@Html.Raw(Model.MaxColor)',
                    borderColor: '@Html.Raw(Model.MaxColor)',
                    borderWidth: 2
                }]
            },
            options: {
                responsive: true,
                maintainAspectRatio: false,
                interaction: {
                    mode: 'index',
                    intersect: false,
                },
                stacked: true,
                plugins: {
                    legend: {
                        display: @Model.DisplayLabels.ToString().ToLower(),
                        position: 'top',
                    },
                    title: {
                        display: @titleExists.ToString().ToLower(),
                        text: '@Model.Title'
                    }
                },
                scales: {
                    y: {
                        type: 'linear',
                        display: true,
                        position: 'left',
                        grid: {
                            drawOnChartArea: false,
                        },
                    },
                    y1: {
                        type: 'linear',
                        display: true,
                        position: 'right',
                        offset: true,
                        grid: {
                            drawOnChartArea: false,
                        },
                    },
                },
            }
        });
    </script>