@page
@using CashTrack.Models.BudgetModels;
@using System.Text.Json;
@using CashTrack.Pages.Shared;
@model CashTrack.Pages.Budget.MonthlyModel
@{
}
<div class="container-fluid mb-0">

    @await Html.PartialAsync("_MessagePartial",
    new _MessagePartial() { Message = Model.InfoMessage, MessageType = MessageType.Info, Show = Model.InfoMessage != null })
    @await Html.PartialAsync("_MessagePartial",
    new _MessagePartial() { Message = Model.SuccessMessage, MessageType = MessageType.Success, Show = Model.SuccessMessage != null })
    @await Html.PartialAsync("_MessagePartial",
    new _MessagePartial() {MessageType = MessageType.Danger, Show = !ViewData.ModelState.IsValid })

    @*NAV TABS*@
    <ul class="nav nav-tabs">
        <li class="nav-item">
            <a asp-page="./Annual"
               class="nav-link">
                Annual
            </a>
        </li>
        <li class="nav-item">
            <a asp-page="./Monthly"
               class="nav-link active">
                Monthly
            </a>
        </li>
        <li class="nav-item dropdown">
            <a class="nav-link dropdown-toggle"
               data-bs-toggle="dropdown">
                Add
            </a>
            <ul class="dropdown-menu">
                <li class="text-center">
                    <button class="dropdown-item fakelink text-center"
                            data-bs-toggle="modal"
                            data-bs-target="#addBudgetModal">
                        Add Budget
                    </button>
                </li>
                <li class="text-center">
                    <button class="dropdown-item fakelink text-center"
                            id="addSubCategory"
                            data-bs-toggle="modal"
                            data-bs-target="#addSubCategoryModal">
                        Add Category
                    </button>
                </li>
            </ul>
        </li>
    </ul>
    @*END NAV TABS*@
        <div class="modal fade" id="addBudgetModal">
        @await Html.PartialAsync("_AddBudgetModal", new AddBudgetAllocationModal()
        {
        SubCategoryList = new SelectList(Model.CategoryList, "Id", "Category"),
        Month = DateTime.Now.Month,
        Year = DateTime.Now.Year,
        Amount = 0,
        TimeSpan = AllocationTimeSpan.Month,
        Type = BudgetType.Need
        })
    </div>
        <div class="row mb-1">
        @if (Model.BudgetPageResponse.MonthlyBudgetChartData != null)
        {
            <div class="col">
                <canvas id="monthlyBudgetChart" class="chart-height"></canvas>
            </div>
        }
    </div>
        <div class="row mb-1">
        @if (Model.BudgetPageResponse.MonthlySummary != null)
        {
            <div class="col-6 col-lg-3">

                    <form method="get" class="mt-1">
                        <div class="input-group">
                            <span class="input-group-text">Month</span>
                            <select data-val="true" asp-for=@Model.Month asp-items="@Model.MonthList" class="form-select text-center" id="monthlyBudgetMonthSelection">
                                <option value="@Model.Month" selected disabled hidden></option>
                            </select>
                        </div>
                        <div class="input-group">
                            <span class="input-group-text">Year</span>
                            <select data-val="true" asp-for=@Model.Year asp-items="@Model.YearSelectList" class="form-select text-center" id="monthlyBudgetYearSelection">
                                <option value="@Model.Year" selected disabled hidden></option>
                            </select>
                        </div>
                        <button class="btn btn-secondary rounded-end" type="submit">
                            <i class="bi bi-search icon-size-md text-white mx-3" role="img"></i>
                        </button>
                    </form>

                <ul class="list-group text-center mt-3">
                    <li class="list-group-item d-flex justify-content-between">
                        <span class="d-none d-md-block">
                            Income: &nbsp;
                        </span>
                        <span class="fw-bold text-primary responsive-text">
                            @String.Format("{0:n}", Model.BudgetPageResponse.MonthlySummary.IncomeAmount)
                        </span>
                    </li>
                    <li class="list-group-item d-flex justify-content-between">
                        <span class="d-none d-md-block">
                            Expenses:
                        </span>
                        <span class="fw-bold text-primary responsive-text">
                            @String.Format("{0:n}", Model.BudgetPageResponse.MonthlySummary.ExpensesAmount)
                        </span>
                    </li>
                    <li class="list-group-item d-flex justify-content-between">
                        <span class="d-none d-md-block">
                            Needs:
                        </span>
                        <span class="fw-bold text-primary responsive-text">
                            @String.Format("{0:n}", Model.BudgetPageResponse.MonthlySummary.NeedsAmount)
                        </span>
                    </li>
                    <li class="list-group-item d-flex justify-content-between">
                        <span class="d-none d-md-block">
                            Wants:
                        </span>
                        <span class="fw-bold text-primary responsive-text">
                            @String.Format("{0:n}", Model.BudgetPageResponse.MonthlySummary.WantsAmount)
                        </span>
                    </li>
                    <li class="list-group-item d-flex justify-content-between">
                        <span class="d-none d-md-block">
                            Savings:
                        </span>
                        <span class="fw-bold text-primary responsive-text">
                            @String.Format("{0:n}", Model.BudgetPageResponse.MonthlySummary.SavingsAmount)
                        </span>
                    </li>
                    <li class="list-group-item d-flex justify-content-between">
                        <span class="d-none d-md-block">
                            Unallocated:
                        </span>
                        <span class="fw-bold text-primary responsive-text">
                            @String.Format("{0:n}", Model.BudgetPageResponse.MonthlySummary.UnallocatedAmount)
                        </span>
                    </li>
                </ul>
            </div>
        }
        @if (Model.BudgetPageResponse.TypePercentages != null && Model.BudgetPageResponse.TypePercentages.Values.Sum() > 0)
        {
            <div class="col-6 col-lg-3 mt-3">
                <canvas id="typePercentagesDonut" class="chart-height"></canvas>
            </div>
        }
        @if (Model.BudgetPageResponse.SubCategoryPercentages != null && Model.BudgetPageResponse.SubCategoryPercentages.Values.Sum() > 0)
        {
            <div class="col-6 col-lg-3 mt-3">
                <canvas id="subCategoryPie" class="chart-height"></canvas>
            </div>
        }
        @if (Model.BudgetPageResponse.MainCategoryPercentages != null && Model.BudgetPageResponse.MainCategoryPercentages.Values.Sum() > 0)
        {
            <div class="col-6 col-lg-3 mt-3">
                <canvas id="mainCategoryPie" class="chart-height"></canvas>
            </div>
        }
    </div>
</div>
@section Scripts {
    <script src="~/js/budget.js" asp-append-version="true"></script>
    <script src="https://cdn.jsdelivr.net/npm/chart.js@3.7.1/dist/chart.min.js" asp-append-version="true"></script>
    @await Html.PartialAsync("MonthlyBudgetChart", new MonthlyBudgetChart()
    {
        ElementId = "monthlyBudgetChart",
        Labels = JsonSerializer.Serialize(Model.BudgetPageResponse.MonthlyBudgetChartData.Labels),
        IncomeDataset = JsonSerializer.Serialize(Model.BudgetPageResponse.MonthlyBudgetChartData.IncomeData),
        ExpenseDataset = Model.BudgetPageResponse.MonthlyBudgetChartData.ExpenseData,
        SavingsDataset = JsonSerializer.Serialize(Model.BudgetPageResponse.MonthlyBudgetChartData.SavingsData),
        UnallocatedDataset = JsonSerializer.Serialize(Model.BudgetPageResponse.MonthlyBudgetChartData.Unallocated),
        Title = DateTime.Now.Year.ToString()
    })
}