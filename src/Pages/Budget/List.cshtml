@page
@using CashTrack.Models.BudgetModels;
@using CashTrack.Models.SubCategoryModels;
@using CashTrack.Pages.Shared;
@using System.Globalization;
@model CashTrack.Pages.Budget.ListModel
@{
}

<div class="container-fluid mb-0">

    @await Html.PartialAsync("_MessagePartial",
    new _MessagePartial() { Message = Model.InfoMessage, MessageType = MessageType.Info, Show = Model.InfoMessage != null })
    @await Html.PartialAsync("_MessagePartial",
    new _MessagePartial() { Message = Model.SuccessMessage, MessageType = MessageType.Success, Show = Model.SuccessMessage != null })
    @await Html.PartialAsync("_MessagePartial",
    new _MessagePartial() {MessageType = MessageType.Danger, Show = !ViewData.ModelState.IsValid })

    @*NAV TABS*@
    <ul class="nav nav-tabs">
        <li class="nav-item">
            <a asp-page="./Annual"
               class="nav-link">
                Annual
            </a>
        </li>
        <li class="nav-item">
            <a asp-page="./Monthly"
               class="nav-link">
                Monthly
            </a>
        </li>
        <li class="nav-item">
            <a asp-page="./List"
               class="nav-link active">
                List
            </a>
        </li>
        <li class="nav-item dropdown">
            <a class="nav-link dropdown-toggle"
               data-bs-toggle="dropdown">
                Add
            </a>
            <ul class="dropdown-menu">
                <li class="text-center">
                    <button class="dropdown-item fakelink text-center"
                            id="addBudgetButton"
                            data-bs-toggle="modal"
                            data-bs-target="#addBudgetModal">
                        Add Budget
                    </button>
                </li>
                <li class="text-center">
                    <button class="dropdown-item fakelink text-center"
                            id="addSubCategory"
                            data-bs-toggle="modal"
                            data-bs-target="#addSubCategoryModal">
                        Add Category
                    </button>
                </li>
            </ul>
        </li>
    </ul>
    @*END NAV TABS*@
        <div class="modal fade" id="addSubCategoryModal">
        @await Html.PartialAsync("AddEditSubCategoryModal", new AddEditSubCategoryModal()
        {
            Returnurl="/Budget/List",
            IsEdit = false,
            MainCategoryList = Model.MainCategoryList,
            InUse=true
        });
    </div>
    <div class="modal fade" id="addBudgetModal">
        @await Html.PartialAsync("AddBudgetModal", new AddEditBudgetAllocationModal()
        {
        SubCategoryList = new SelectList(Model.CategoryList, "Id", "Category"),
        Month = DateTime.Now.Month,
        Year = DateTime.Now.Year,
        Amount = 0,
        TimeSpan = AllocationTimeSpan.Month,
        Type = BudgetType.Need
        })
    </div>
    @if (Model.BudgetListResponse.ListItems != null && Model.BudgetListResponse.TotalCount > 0)
    {
        <div class="row mt-2">
            <div class="table-responsive table-sm">
                <table class="table table-bordered table-sm table-hover mb-1 shadow">
                    <thead>
                        <tr class="text-center table-primary merchant-table-header-row">
                            <th>
                                Year
                                @{
                                    var currentFilter1 = Model.Query == 0 && Model.Q2 == true ? "text-success" : "text-white";
                                }
                                <a asp-page="./List" asp-route-Query="0" asp-route-Q2="true" asp-route-PageNumber="@Model.PageNumber" class="icon-button float-end orderIcon">
                                    <i class="bi bi-arrow-up icon-size @currentFilter1"></i>
                                </a>
                                @{
                                    var currentFilter2 = Model.Query == 0 && Model.Q2 == false ? "text-success" : "text-white";
                                }
                                <a asp-page="./List" asp-route-Query="0" asp-route-Q2="false" asp-route-PageNumber="@Model.PageNumber" class="icon-button float-end orderIcon">
                                    <i class="bi bi-arrow-down icon-size @currentFilter2"></i>
                                </a>
                            </th>
                            <th>
                                Month
                                @{
                                    var currentFilter3 = Model.Query == BudgetOrderBy.Month && Model.Q2 == true ? "text-success" : "text-white";
                                }
                                <a asp-page="./List" asp-route-Query="1" asp-route-Q2="true" asp-route-PageNumber="@Model.PageNumber" class="icon-button float-end orderIcon">
                                    <i class="bi bi-arrow-up icon-size @currentFilter3"></i>
                                </a>
                                @{
                                    var currentFilter4 = Model.Query == BudgetOrderBy.Month && Model.Q2 == false ? "text-success" : "text-white";
                                }
                                <a asp-page="./List" asp-route-Query="1" asp-route-Q2="false" asp-route-PageNumber="@Model.PageNumber" class="icon-button float-end orderIcon">
                                    <i class="bi bi-arrow-down icon-size @currentFilter4"></i>
                                </a>
                            </th>
                            <th>
                                Amount
                                @{
                                    var currentFilter5 = Model.Query == BudgetOrderBy.Amount && Model.Q2 == true ? "text-success" : "text-white";
                                }
                                <a asp-page="./List" asp-route-Query="2" asp-route-Q2="true" asp-route-PageNumber="@Model.PageNumber" class="icon-button float-end orderIcon">
                                    <i class="bi bi-arrow-up icon-size @currentFilter5"></i>
                                </a>
                                @{
                                    var currentFilter6 = Model.Query == BudgetOrderBy.Amount && Model.Q2 == false ? "text-success" : "text-white";
                                }
                                <a asp-page="./List" asp-route-Query="2" asp-route-Q2="false" asp-route-PageNumber="@Model.PageNumber" class="icon-button float-end orderIcon">
                                    <i class="bi bi-arrow-down icon-size @currentFilter6"></i>
                                </a>
                            </th>
                            <th>
                                SubCategory
                                @{
                                    var currentFilter7 = Model.Query == BudgetOrderBy.SubCategory && Model.Q2 == true ? "text-success" : "text-white";
                                }
                                <a asp-page="./List" asp-route-Query="3" asp-route-Q2="true" asp-route-PageNumber="@Model.PageNumber" class="icon-button float-end orderIcon">
                                    <i class="bi bi-arrow-up icon-size @currentFilter7"></i>
                                </a>
                                @{
                                    var currentFilter8 = Model.Query == BudgetOrderBy.SubCategory && Model.Q2 == false ? "text-success" : "text-white";
                                }
                                <a asp-page="./List" asp-route-Query="3" asp-route-Q2="false" asp-route-PageNumber="@Model.PageNumber" class="icon-button float-end orderIcon">
                                    <i class="bi bi-arrow-down icon-size @currentFilter8"></i>
                                </a>
                            </th>
                            <th>
                                MainCategory
                                @{
                                    var currentFilter9 = Model.Query == BudgetOrderBy.MainCategory && Model.Q2 == true ? "text-success" : "text-white";
                                }
                                <a asp-page="./List" asp-route-Query="4" asp-route-Q2="true" asp-route-PageNumber="@Model.PageNumber" class="icon-button float-end orderIcon">
                                    <i class="bi bi-arrow-up icon-size @currentFilter9"></i>
                                </a>
                                @{
                                    var currentFilter10 = Model.Query == BudgetOrderBy.MainCategory && Model.Q2 == false ? "text-success" : "text-white";
                                }
                                <a asp-page="./List" asp-route-Query="4" asp-route-Q2="false" asp-route-PageNumber="@Model.PageNumber" class="icon-button float-end orderIcon">
                                    <i class="bi bi-arrow-down icon-size @currentFilter10"></i>
                                </a>
                            </th>
                            <th>
                                Type
                                @{
                                    var currentFilter11 = Model.Query == BudgetOrderBy.Type && Model.Q2 == true ? "text-success" : "text-white";
                                }
                                <a asp-page="./List" asp-route-Query="5" asp-route-Q2="true" asp-route-PageNumber="@Model.PageNumber" class="icon-button float-end orderIcon">
                                    <i class="bi bi-arrow-up icon-size @currentFilter11"></i>
                                </a>
                                @{
                                    var currentFilter12 = Model.Query == BudgetOrderBy.Type && Model.Q2 == false ? "text-success" : "text-white";
                                }
                                <a asp-page="./List" asp-route-Query="5" asp-route-Q2="false" asp-route-PageNumber="@Model.PageNumber" class="icon-button float-end orderIcon">
                                    <i class="bi bi-arrow-down icon-size @currentFilter12"></i>
                                </a>
                            </th>
                            <th>
                                Actions
                            </th>
                        </tr>
                    </thead>
                    <tbody>
                        @foreach(var budget in Model.BudgetListResponse.ListItems)
                        {
                            <tr class="text-center">
                                <td>
                                    @budget.Year
                                </td>
                                <td>
                                    @CultureInfo.CurrentCulture.DateTimeFormat.GetMonthName(budget.Month)
                                </td>
                                <td>
                                    @budget.Amount
                                </td>
                                <td>
                                    @budget.SubCategory
                                </td>
                                <td>
                                    @budget.MainCategory
                                </td>
                                <td>
                                    @budget.Type
                                </td>
                                <td>
                                    <button type="button"
                                    data-bs-toggle="modal"
                                    data-bs-target="#editBudgetModal-@budget.Id"
                                    id="editBudgetButton-@budget.Id"
                                    class="icon-button px-2 load-main-category-edit-modal-js disable-inputs-on-check-edit-js">
                                    <i class="bi bi-pencil text-primary action-icon"></i>
                                    </button>
                                    @*Edit Modal*@
                                    <div class="modal fade" id="editBudgetModal-@budget.Id">
                                    @await Html.PartialAsync("EditBudgetModal", new AddEditBudgetAllocationModal()
                                    {
                                        Id = budget.Id,
                                        SubCategoryList = new SelectList(Model.CategoryList, "Id", "Category", budget.SubCategoryId),
                                        SubCategoryId = budget.SubCategoryId,
                                        Month = budget.Month,
                                        Year = budget.Year,
                                        Amount = budget.Amount,
                                        Type = Enum.Parse<BudgetType>(budget.Type),
                                        ReturnUrl="/Budget/List",
                                        Q2 = Model.Q2,
                                        Query = Model.Query,
                                        PageNumber = Model.PageNumber
                                    })
                                    </div>
                                    @*End Edit Modal*@
                                    &nbsp
                                    <button type="button" data-bs-toggle="modal"
                                    data-bs-target="#deleteModal-@budget.Id" class="icon-button ps-2 ps-0 me-0">
                                        <i class="bi bi-trash text-primary action-icon"></i>
                                    </button>
                                    @*Delete Modal*@
                                    <div class="modal fade" id="deleteModal-@budget.Id">
                                        <div class="modal-dialog" role="document">
                                            <div class="modal-content">
                                                <div class="modal-header text-center">
                                                    <h5 class="modal-title text-center">
                                                        <strong>Are you sure you want to Delete this Budget Item?</strong>
                                                    </h5>
                                                    <button 
                                                        type="button" 
                                                        class="btn-close" 
                                                        data-bs-dismiss="modal">
                                                    </button>
                                                </div>

                                                <div class="modal-footer d-flex justify-content-evenly">
                                                    <button type="button" 
                                                        class="btn btn-secondary" 
                                                        data-bs-dismiss="modal">Cancel</button>
                                                    <form method="post"
                                                  asp-page="./List"
                                                  asp-page-handler="Delete"
                                                  asp-route-budgetId="@budget.Id"
                                                  asp-route-query="@Model.Query"
                                                  asp-route-q2="@Model.Q2"
                                                  asp-route-pageNumber="@Model.PageNumber">
                                                        <button type="submit" class="btn btn-danger">DELETE</button>
                                                    </form>
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                    @*End Delete Modal*@
                                </td>
                            </tr>
                        }
                    </tbody>
                </table>
                <div class="row my-1">
                    <div class="col-sm-6 col-lg-2 col-xl-2 m-auto">
                        @if (@Model.BudgetListResponse.TotalCount > 0)
                        {
                            var currentCount = Model.BudgetListResponse.PageNumber * @Model.BudgetListResponse.PageSize;
                            <span class="text-muted" id="totalCount">@(Math.Min(currentCount, Model.BudgetListResponse.TotalCount)) of @Model.BudgetListResponse.TotalCount</span>
                        }
                    </div>
                    <div class="col-sm-6 col-lg-4 col-xl-6 m-auto">
                    </div>
                    <div class="col-sm-12 col-lg-6 col-xl-4 my-0 py-0 gy-0">
                        @await Html.PartialAsync("_PaginationPartial",
                    new _PaginationPartialModel {
                    PathLink = "../Budget/List",
                    IsExpensePage = false,
                    PageNumber = Model.BudgetListResponse.PageNumber,
                    TotalPages = Model.BudgetListResponse.TotalPages,
                    Query = (int)Model.Query,
                    q2 = Model.Q2.ToString()
                    })
                    </div>
                </div>
            </div>
        </div>
    }
</div>
@section Scripts {
    <script src="~/js/budget.js" asp-append-version="true"></script>
}