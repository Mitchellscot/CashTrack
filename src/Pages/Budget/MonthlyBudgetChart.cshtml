@using System.Text.Json;
@model CashTrack.Pages.Budget.MonthlyBudgetChart
@{
    var savingsColor = JsonSerializer.Deserialize<int[]>(Model.SavingsDataset).Sum() < 0 ? Model.SavingsColor : Model.SavingsColor; 
    //you can add InTheRedSavingsColor and then it would turn pink, but it won't match the annual budget chart
    //so I just removed it.
}
<script>
    const @Model.VariableName = document.getElementById(@Json.Serialize(@Model.ElementId)).getContext('2d');
    const @Model.ElementId = new Chart(@Model.VariableName, {
        type: 'bar',
        data: {
            labels: @Html.Raw(@Model.Labels),
            datasets: [{
                label: 'Income',
                data: @Model.IncomeDataset,
                color: 'rgba(0, 0, 0, 0)',
                backgroundColor: @Html.Raw(Model.IncomeColor),
                borderColor: @Html.Raw(Model.IncomeColor),
                borderWidth: 1
            },
            {
                label: 'Needs',
                data: @Model.NeedDataset,
                color: 'rgba(0, 0, 0, 0)',
                backgroundColor: @Html.Raw(Model.NeedsColor),
                borderColor: @Html.Raw(Model.NeedsColor),
                borderWidth: 1
            },
            {
                label: 'Wants',
                data: @Model.WantDataset,
                color: 'rgba(0, 0, 0, 0)',
                backgroundColor: @Html.Raw(Model.WantsColor),
                borderColor: @Html.Raw(Model.WantsColor),
                borderWidth: 1
            },
            {
                label: 'Savings',
                data: @Model.SavingsDataset,
                color: 'rgba(0, 0, 0, 0)',
                backgroundColor: colorize(),
                borderColor: colorize(),
                borderWidth: 1
            },
            {
                label: 'Unallocated',
                data: @Model.UnallocatedDataset,
                color: 'rgba(0, 0, 0, 0)',
                backgroundColor: @Html.Raw(Model.UnallocatedColor),
                borderColor: @Html.Raw(Model.UnallocatedColor),
                borderWidth: 1
            }]
        },
        options: {
            responsive: true,
            scales: {
                x: {
                    stacked: true,
                },
                y: {
                    stacked: true,
                    type: 'logarithmic'
                },
            },
            plugins: {
                legend: {
                    display: false,
                    position: 'top',
                },
                title: {
                    display: true,
                    text: '@Model.Title'
                }
            }
        }
    });
    function colorize() {
        return (ctx) => {
            const v = ctx.parsed.y;
            console.log(v)
            const c = v < 0 ? @Html.Raw(Model.InTheRedSavingsColor)
            : @Html.Raw(Model.SavingsColor);
            console.log(c);
    return c;
  };
}
    </script>