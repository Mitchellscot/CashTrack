@page
@using CashTrack.Models.BudgetModels
@using CashTrack.Pages.Shared;
@using System.Text.Json;
@model CashTrack.Pages.Budget.IndexModel
@{

}

<div class="container-fluid">
    @await Html.PartialAsync("_MessagePartial",
    new _MessagePartial() { Message = Model.InfoMessage, MessageType = MessageType.Info, Show = Model.InfoMessage != null })
    @await Html.PartialAsync("_MessagePartial",
    new _MessagePartial() { Message = Model.SuccessMessage, MessageType = MessageType.Success, Show = Model.SuccessMessage != null })
    @await Html.PartialAsync("_MessagePartial",
    new _MessagePartial() {MessageType = MessageType.Danger, Show = !ViewData.ModelState.IsValid })
    <div class="row d-flex">
        <div class="float-end">
            <button class="btn btn-primary text-wrap import-link" data-bs-toggle="modal" data-bs-target="#addBudgetModal" id="addBudgetButton">Add Budget Allocation</button>
        </div>
    </div>
    <div class="row mb-1">
        @if (Model.BudgetPageResponse.AnnualBudgetChartData != null)
        {
            <div class="col">
                <canvas id="annualBudgetChart" class="chart-height"></canvas>
            </div>
        }
    </div>
    <div class="modal fade" id="addBudgetModal">
        @await Html.PartialAsync("_AddBudgetModal", new AddBudgetAllocationModal()
        {
        SubCategoryList = new SelectList(Model.CategoryList, "Id", "Category"),
        Month = DateTime.Now.Month,
        Year = DateTime.Now.Year,
        Amount = 0,
        TimeSpan = AllocationTimeSpan.Month,
        Type = BudgetType.Need
        })
    </div>
</div>


@section Scripts {
    <script src="~/js/budget.js" asp-append-version="true"></script>
    <script src="https://cdn.jsdelivr.net/npm/chart.js@3.7.1/dist/chart.min.js" asp-append-version="true"></script>
    @await Html.PartialAsync("_BudgetChartPartial", new _BudgetChartPartial()
    {
        ElementId = "annualBudgetChart",
        IncomeDataset = JsonSerializer.Serialize(Model.BudgetPageResponse.AnnualBudgetChartData.IncomeData),
        NeedDataset = JsonSerializer.Serialize(Model.BudgetPageResponse.AnnualBudgetChartData.NeedsData),
        WantDataset = JsonSerializer.Serialize(Model.BudgetPageResponse.AnnualBudgetChartData.WantsData),
        SavingsDataset = JsonSerializer.Serialize(Model.BudgetPageResponse.AnnualBudgetChartData.SavingsData)
    })
}