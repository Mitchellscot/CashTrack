@page
@using CashTrack.Common;
@using CashTrack.Models.Common
@using CashTrack.Models.IncomeCategoryModels;
@using CashTrack.Models.IncomeModels
@using CashTrack.Pages.Shared
@model CashTrack.Pages.Incomes.IndexModel
@{
    ViewData["Title"] = "- Income";
    Layout = "_Layout";
}

<div class="container-fluid">
    @await Html.PartialAsync("_MessagePartial",
    new _MessagePartial() { Message = Model.InfoMessage, MessageType = MessageType.Info, Show = Model.InfoMessage != null })
    @await Html.PartialAsync("_MessagePartial",
    new _MessagePartial() { Message = Model.SuccessMessage, MessageType = MessageType.Success, Show = Model.SuccessMessage != null })
    @await Html.PartialAsync("_MessagePartial",
    new _MessagePartial() {MessageType = MessageType.Danger, Show = !ViewData.ModelState.IsValid })
    @await Html.PartialAsync("_MessagePartial",
    new _MessagePartial() { Message = "No Income Found!", MessageType = MessageType.Info, Show = Model.IncomeResponse != null && Model.IncomeResponse.TotalCount == 0 })

    <div class="row mb-1 d-flex justify-content-center justify-content-sm-between">
        <div class="col-xl-6 col-12 mb-1 mr-auto">
            <form method="get">
                <div class="input-group">
                    <div class="input-group-prepend d-none d-sm-block">
                        <div class="input-group-text rounded-0 rounded-start">Search</div>
                    </div>
                    <select data-width="100%" asp-items="Model.QueryOptions" class="form-select text-center" id="querySelect" asp-for="Query">
                    </select>
                    <select id="categorySelect" data-width="100%" class="form-select text-center display-none" asp-for="@Model.Q">
                    </select>
                    <input id="qInput" data-val="true" asp-for="@Model.Q" type="Model.InputType" class="form-control w-50">
                    <button class="btn btn-secondary rounded-end" type="submit" asp-route-PageNumber="1">
                        @await Html.PartialAsync("Icons", new Icons()
                        {
                            Icon = Icon.Search,
                            Color = IconColors.White,
                            Height=20,
                            Width=20,
                        Classes="mx-3"
                        })
                    </button>
                    <input type="hidden" asp-for="@Model.PageNumber" value="1" />
                </div>
            </form>
        </div>
        <div class="col-xl-3 col-6 px-xl-0 d-none d-sm-block">
            <div class="btn-group" role="group">
                <a asp-page="./Index" asp-route-Query="11" asp-route-pageNumber="@Model.PageNumber" type="button" class="btn btn-primary thirty-days-button">30 Days</a>
                <a asp-page="./Index" asp-route-Query="8" asp-route-pageNumber="@Model.PageNumber" type="button" class="btn btn-primary">Month</a>
                <a asp-page="./Index" asp-route-Query="9" asp-route-pageNumber="@Model.PageNumber" type="button" class="btn btn-primary">Quarter</a>
                <a asp-page="./Index" asp-route-Query="10" asp-route-pageNumber="@Model.PageNumber" type="button" class="btn btn-primary">Year</a>
            </div>
        </div>
        <div class="col-3 col-xl-1 d-none d-sm-block">
            <span class="validation-text" asp-validation-for="@Model.Q"></span>
        </div>
        <div class="col-auto col-xl-2 me-xl-0 d-flex justify-content-end">
            <button class="btn btn-primary text-wrap btn-height" data-bs-toggle="modal" data-bs-target="#addIncomeModal" id="addIncomeButton">Add Income</button>
        </div>
    </div>
    @* Add Income Modal *@
    <div class="modal fade" id="addIncomeModal" data-bs-backdrop="false">
        @await Html.PartialAsync("AddEditIncomeModal", new AddEditIncomeModal(){ 
            ReturnUrl = "~/Income/Index", 
            IsEdit = false, 
            CategoryList = new SelectList(Model.CategoryList, "Id", "Category"), 
            Date= DateTime.Today, 
            ShowAddCategoryButton = true,
            PageNumber = Model.PageNumber,
            Q = Model.Q,
            Query= Model.Query
        })
    </div>
    <div class="modal fade" id="addIncomeCategoryModal" data-bs-backdrop="false">
        @await Html.PartialAsync("AddEditIncomeCategoryModal",
        new AddEditIncomeCategoryModal() {
            ReturnUrl = "/Income/Index#addIncomeModal",
            InUse = true,
            IsEdit = false,
        })
    </div> 
    @*End Add Income Modal*@
    @if (Model.IncomeResponse != null && Model.IncomeResponse.TotalCount > 0)
    {
        <div class="row">
            <div class="table-responsive">
                <table class="table table-bordered table-hover table-sm mb-3 shadow">
                    <thead>
                        <tr class="text-center table-primary">
                            <th width="10%">
                                Date
                            </th>
                            <th width="10%">
                                Amount
                            </th>
                            <th width="10%">
                                Source
                            </th>
                            <th width="10%">
                                Category
                            </th>
                            <th width="10%">
                                Actions
                            </th>
                        </tr>
                    </thead>
                    <tbody>
                        @foreach (var income in Model.IncomeResponse.ListItems)
                        {
                            <tr class="text-center">
                                <td>
                                    <a asp-page="/Income/Index"
                                        asp-route-Query="0"
                                        asp-route-Q=@income.Date.Date.ToString("yyyy-MM-dd")
                                        asp-route-pageNumber="1"
                                        class="table-link">
                                    @income.Date.Date.ToShortDateString()
                                    </a>
                                </td>
                                <td>
                                    <a asp-page="/Income/Index"
                                        asp-route-Query="4"
                                        asp-route-Q=@income.Amount
                                        asp-route-pageNumber="1"
                                        class="table-link">
                                    @String.Format("{0:n}", income.Amount)
                                    </a>
                                </td>
                                <td>
                                    <a asp-page="../Sources/Detail" asp-route-id="@income.SourceId" class="table-link">@income.Source</a>
                                </td>
                                <td>
                                    <a asp-page="/Income/Index" asp-route-Query="7" asp-route-Q=@income.CategoryId asp-route-pageNumber="1" class="table-link">
                                    @income.Category
                                    </a>
                                </td>
                                <td>
                                    @if (!string.IsNullOrEmpty(income.RefundNotes) && !string.IsNullOrEmpty(income.Notes))
                                    {
                                        <button type="button" data-bs-toggle="modal"
                                    data-bs-target="#refundNotes-@income.Id" class="pe-2 ps-0 ms-0 icon-button">
                                            @await Html.PartialAsync("Icons", new Icons()
                                            {
                                                Icon = Icon.Reboot,
                                                Color = IconColors.Primary,
                                                Height=20,
                                                Width=20,
                                                Classes="action-icon"
                                            })
                                        </button>
                                        @*Begin Refund Notes Modal*@
                                        <div class="modal fade" id="refundNotes-@income.Id">
                                            @await Html.PartialAsync("_ShortMessageModal", new _ShortMessageModal{
                                Title="Refund Notes", Message = income.RefundNotes})
                                        </div>
                                        @*End Refund Notes Modal*@
                                    }
                                    else if (string.IsNullOrEmpty(income.RefundNotes))
                                    {
                                        <button type="button" data-bs-toggle="modal" disabled class="pe-2 ps-0 ms-0 icon-button">
                                            @await Html.PartialAsync("Icons", new Icons()
                                            {
                                                Icon = Icon.Reboot,
                                                Color = IconColors.Primary,
                                                Height=20,
                                                Width=20,
                                                Classes="visibility-hidden"
                                            })
                                        </button>
                                    }
                                    @if (!string.IsNullOrEmpty(income.Notes))
                                    {
                                        <button type="button" data-bs-toggle="modal"
                                    data-bs-target="#detailModal-@income.Id" class="pe-2 ps-0 ms-0 icon-button">
                                            @await Html.PartialAsync("Icons", new Icons()
                                            {
                                                Icon = Icon.FileEarmarkCheck,
                                                Color = IconColors.Primary,
                                                Height=20,
                                                Width=20,
                                                Classes="action-icon"
                                            })
                                        </button>
                                        @*Begin Detail Modal*@
                                        <div class="modal fade" id="detailModal-@income.Id">
                                            @await Html.PartialAsync("_ShortMessageModal", new _ShortMessageModal{ Title="Notes",
                                Message = income.Notes})
                                        </div>
                                        @*End Detail Modal*@
                                    }
                                    else if (string.IsNullOrEmpty(income.Notes) && !string.IsNullOrEmpty(income.RefundNotes))
                                    {
                                        <button type="button" data-bs-toggle="modal" disabled class="pe-2 ps-0 ms-0 icon-button">
                                            @await Html.PartialAsync("Icons", new Icons()
                                            {
                                                Icon = Icon.FileEarmarkCheck,
                                                Color = IconColors.Primary,
                                                Height=20,
                                                Width=20,
                                Classes="action-icon visibility-hidden"
                                            })
                                        </button>
                                        <button type="button" data-bs-toggle="modal"
                                    data-bs-target="#refundNotes-@income.Id" class="pe-2 ps-0 ms-0 icon-button">
                                            @await Html.PartialAsync("Icons", new Icons()
                                            {
                                                Icon = Icon.Reboot,
                                                Color = IconColors.Primary,
                                                Height=20,
                                                Width=20,
                                                Classes="action-icon"
                                            })
                                        </button>
                                        @*Begin Refund Notes Modal*@
                                        <div class="modal fade" id="refundNotes-@income.Id">
                                            @await Html.PartialAsync("_ShortMessageModal", new _ShortMessageModal{ Title="Refund Notes",
                                Message = income.RefundNotes})
                                        </div>
                                        @*End Refund Notes Modal*@
                                    }
                                    else
                                    {
                                        <button type="button" data-bs-toggle="modal" disabled
                                    data-bs-target="#detailModal-@income.Id" class="pe-2 ps-0 ms-0 icon-button">
                                            @await Html.PartialAsync("Icons", new Icons()
                                            {
                                                Icon = Icon.FileEarmarkCheck,
                                                Color = IconColors.Primary,
                                                Height=20,
                                                Width=20,
                                                Classes="visibility-hidden"
                                            })
                                        </button>
                                    }
                                    <button type="button" data-bs-toggle="modal"
                                    data-bs-target="#editIncomeModal-@income.Id" id="editIncomeButton-@income.Id" class="px-2 icon-button">
                                            @await Html.PartialAsync("Icons", new Icons()
                                            {
                                                Icon = Icon.Pencil,
                                                Color = IconColors.Primary,
                                                Height=20,
                                                Width=20,
                                                Classes="action-icon"
                                            })
                                    </button>
                                    @* Edit Income Modal *@
                                    <div class="modal fade" id="editIncomeModal-@income.Id">
                                        @await Html.PartialAsync("AddEditIncomeModal", new AddEditIncomeModal(){
                                IsEdit = true,
                                ReturnUrl = "~/Income/Index",
                                CategoryId = @income.CategoryId,
                                CategoryList = new SelectList(Model.CategoryList, "Id", "Category", income.CategoryId),
                                Date=income.Date,
                                Amount = income.Amount,
                                IsRefund = income.IsRefund,
                                Source = income.Source,
                                Notes = income.Notes,
                                Id = income.Id,
                                ShowAddCategoryButton = true,
                                PageNumber = Model.PageNumber,
                                Q = Model.Q,
                                Query= Model.Query
                                })
                                    </div>
                                    @*End Edit Income Modal*@

                                    <button type="button" data-bs-toggle="modal"
                                    data-bs-target="#deleteModal-@income.Id" class="ps-2 ps-0 me-0 icon-button">
                                            @await Html.PartialAsync("Icons", new Icons()
                                            {
                                                Icon = Icon.Trash,
                                                Color = IconColors.Primary,
                                                Height=20,
                                                Width=20,
                                                Classes="action-icon"
                                            })
                                    </button>
                                    @*Delete Model*@
                                    <div class="modal fade" id="deleteModal-@income.Id">
                                        <div class="modal-dialog" role="document">
                                            <div class="modal-content">
                                                <div class="modal-header text-center">
                                                    <h5 class="modal-title text-center">
                                                        <strong>Are you sure you want to Delete this Income?</strong>
                                                    </h5>
                                                    <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close">
                                                        <span aria-hidden="true"></span>
                                                    </button>
                                                </div>

                                                <div class="modal-footer d-flex justify-content-evenly">
                                                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">
                                                        Cancel
                                                    </button>
                                                    <form method="post"
                                                  asp-page="./Index"
                                                  asp-page-handler="Delete"
                                                  asp-route-incomeId="@income.Id"
                                                  asp-route-query="@Model.Query"
                                                  asp-route-q="@Model.Q"
                                                  asp-route-pageNumber="@Model.PageNumber">
                                                        <button type="submit" class="btn btn-danger">DELETE</button>
                                                    </form>
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                    @*End Delete Modal*@
                                </td>
                            </tr>
                        }
                    </tbody>
                </table>
                <div class="row my-1">
                    <div class="col-sm-6 col-lg-2 col-xl-2 m-auto">
                        @if (@Model.IncomeResponse.TotalCount > 0)
                        {
                            var currentCount = Model.IncomeResponse.PageNumber * @Model.IncomeResponse.PageSize;
                            <span class="text-muted" id="totalPages">@(Math.Min(currentCount, Model.IncomeResponse.TotalCount)) of @Model.IncomeResponse.TotalCount</span>
                        }
                    </div>
                    <div class="col-sm-6 col-lg-4 col-xl-6 m-auto">
                        @if (@Model.IncomeResponse.TotalAmount > 0 && Model.InfoMessage == null)
                        {
                            <div class="text-center">
                                <strong class="p-0" id="totalAmount">Total:</strong> $@String.Format("{0:n}", Model.IncomeResponse.TotalAmount)
                            </div>
                        }
                    </div>
                    <div class="col-sm-12 col-lg-6 col-xl-4 my-0 py-0 gy-0">
                        @await Html.PartialAsync("_PaginationPartial",
                    new _PaginationPartialModel {
                    PathLink = "../Income/Index",
                    IsExpensePage = false,
                    PageNumber = Model.IncomeResponse.PageNumber,
                    TotalPages = Model.IncomeResponse.TotalPages,
                    Query = Model.Query,
                    q = Model.Q,
                    q2 = null
                    })
                    </div>
                </div>
            </div>
        </div>
    }
</div>

@section Scripts {
<script src="~/js/income.js"></script>
<script src="~/js/jquery.js"></script>
<script src="~/js/jqueryVal.js"></script>
<script src="~/js/jqueryValUnob.js"></script>
}
